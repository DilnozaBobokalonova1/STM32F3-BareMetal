
11_systick_delay.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012a0  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000048  08001440  08001440  00011440  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001488  08001488  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001488  08001488  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001488  08001488  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001488  08001488  00011488  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800148c  0800148c  0001148c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001490  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002005c  2**0
                  CONTENTS
 10 .bss          00000170  2000005c  2000005c  0002005c  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200001cc  200001cc  0002005c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000e4f  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000004b0  00000000  00000000  00020f1e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000140  00000000  00000000  000213d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000d9  00000000  00000000  00021510  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00016b04  00000000  00000000  000215e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   000019c4  00000000  00000000  000380ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00078169  00000000  00000000  00039ab1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000b50  00000000  00000000  000b1c1c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000072  00000000  00000000  000b276c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001428 	.word	0x08001428

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	08001428 	.word	0x08001428

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <pa_1_adc_init>:
#define PIN15					(1U<<15)
#define LED_PIN					PIN15
#define PIN8					(1U<<8)
#define LED_PIN8				PIN8

void pa_1_adc_init(void) {
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0

					/*Configure the ADC GPIO pin*/

	/*	Enable clock access to GPIOA*/
	RCC->AHBENR |= GPIOAEN;
 8000284:	4b15      	ldr	r3, [pc, #84]	; (80002dc <pa_1_adc_init+0x5c>)
 8000286:	695b      	ldr	r3, [r3, #20]
 8000288:	4a14      	ldr	r2, [pc, #80]	; (80002dc <pa_1_adc_init+0x5c>)
 800028a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800028e:	6153      	str	r3, [r2, #20]

	/*	Set the mode of PA1 to analog mode*/
	/* 	PA1 is located at MODE1 which are bits 2 & 3 */
	/* 	To set to analog mode, both bits have to be set to 1 */
	GPIOA->MODER |= ((1U << 2) | (1U << 3));
 8000290:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000294:	681b      	ldr	r3, [r3, #0]
 8000296:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 800029a:	f043 030c 	orr.w	r3, r3, #12
 800029e:	6013      	str	r3, [r2, #0]

					/*Configure the ADC module*/

	/*Enable clock access to ADC */
	RCC->AHBENR |= ADC1EN;
 80002a0:	4b0e      	ldr	r3, [pc, #56]	; (80002dc <pa_1_adc_init+0x5c>)
 80002a2:	695b      	ldr	r3, [r3, #20]
 80002a4:	4a0d      	ldr	r2, [pc, #52]	; (80002dc <pa_1_adc_init+0x5c>)
 80002a6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80002aa:	6153      	str	r3, [r2, #20]

	/*Conversion sequence start*/
	//I'm using Channel 2 within ADC1 so set first conversion of sequence register to 00010
	ADC1->SQR1 = ADC1_CH2;
 80002ac:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 80002b0:	2280      	movs	r2, #128	; 0x80
 80002b2:	631a      	str	r2, [r3, #48]	; 0x30

	//Set the sequence length of the ADC conversion
	//Now note that the SQR1 SQ1 bits have been set, so we cannot modify them. OR the SEQ len bits
	ADC1->SQR1 |= ADC1_SEQ_LEN;
 80002b4:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 80002b8:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 80002bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002be:	6313      	str	r3, [r2, #48]	; 0x30

	/*Enable ADC module*/
	ADC1->CR |= CR_ADC_EN;
 80002c0:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 80002c4:	689b      	ldr	r3, [r3, #8]
 80002c6:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 80002ca:	f043 0301 	orr.w	r3, r3, #1
 80002ce:	6093      	str	r3, [r2, #8]
}
 80002d0:	bf00      	nop
 80002d2:	46bd      	mov	sp, r7
 80002d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d8:	4770      	bx	lr
 80002da:	bf00      	nop
 80002dc:	40021000 	.word	0x40021000

080002e0 <start_conversion>:

void start_conversion(void) {
 80002e0:	b480      	push	{r7}
 80002e2:	af00      	add	r7, sp, #0
	//start the ADC conversion
	ADC1->CR |= CR_ADC_START;
 80002e4:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 80002e8:	689b      	ldr	r3, [r3, #8]
 80002ea:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 80002ee:	f043 0304 	orr.w	r3, r3, #4
 80002f2:	6093      	str	r3, [r2, #8]

}
 80002f4:	bf00      	nop
 80002f6:	46bd      	mov	sp, r7
 80002f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002fc:	4770      	bx	lr
	...

08000300 <adc_read>:

uint32_t adc_read(void) {
 8000300:	b480      	push	{r7}
 8000302:	af00      	add	r7, sp, #0

	RCC->AHBENR |= GPIOEEN;
 8000304:	4b1e      	ldr	r3, [pc, #120]	; (8000380 <adc_read+0x80>)
 8000306:	695b      	ldr	r3, [r3, #20]
 8000308:	4a1d      	ldr	r2, [pc, #116]	; (8000380 <adc_read+0x80>)
 800030a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800030e:	6153      	str	r3, [r2, #20]
	GPIOE->MODER |= (1U<<30);
 8000310:	4b1c      	ldr	r3, [pc, #112]	; (8000384 <adc_read+0x84>)
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	4a1b      	ldr	r2, [pc, #108]	; (8000384 <adc_read+0x84>)
 8000316:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800031a:	6013      	str	r3, [r2, #0]
	GPIOE->MODER &=~(1U<<31);
 800031c:	4b19      	ldr	r3, [pc, #100]	; (8000384 <adc_read+0x84>)
 800031e:	681b      	ldr	r3, [r3, #0]
 8000320:	4a18      	ldr	r2, [pc, #96]	; (8000384 <adc_read+0x84>)
 8000322:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000326:	6013      	str	r3, [r2, #0]
	GPIOE->MODER |= (1U<<16);
 8000328:	4b16      	ldr	r3, [pc, #88]	; (8000384 <adc_read+0x84>)
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	4a15      	ldr	r2, [pc, #84]	; (8000384 <adc_read+0x84>)
 800032e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000332:	6013      	str	r3, [r2, #0]
	GPIOE->MODER &= ~(1U<<17);
 8000334:	4b13      	ldr	r3, [pc, #76]	; (8000384 <adc_read+0x84>)
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	4a12      	ldr	r2, [pc, #72]	; (8000384 <adc_read+0x84>)
 800033a:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800033e:	6013      	str	r3, [r2, #0]

	//wait for the conversion to be complete
	//while the status register for EOC is set to 0,
	//aka conversion not complete, we get stuck here
	while (!(ADC1->ISR & SR_EOC)) {
 8000340:	e00f      	b.n	8000362 <adc_read+0x62>
		GPIOE->BSRR = LED_PIN;
 8000342:	4b10      	ldr	r3, [pc, #64]	; (8000384 <adc_read+0x84>)
 8000344:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8000348:	619a      	str	r2, [r3, #24]
		GPIOE->BSRR = LED_PIN8;
 800034a:	4b0e      	ldr	r3, [pc, #56]	; (8000384 <adc_read+0x84>)
 800034c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000350:	619a      	str	r2, [r3, #24]
		GPIOE->BSRR = (1U<<31);
 8000352:	4b0c      	ldr	r3, [pc, #48]	; (8000384 <adc_read+0x84>)
 8000354:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8000358:	619a      	str	r2, [r3, #24]
		GPIOE->BSRR = (1U<<24);
 800035a:	4b0a      	ldr	r3, [pc, #40]	; (8000384 <adc_read+0x84>)
 800035c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000360:	619a      	str	r2, [r3, #24]
	while (!(ADC1->ISR & SR_EOC)) {
 8000362:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	f003 0304 	and.w	r3, r3, #4
 800036c:	2b00      	cmp	r3, #0
 800036e:	d0e8      	beq.n	8000342 <adc_read+0x42>
	};

//	GPIOE->BSRR = (1U<<31);
//	GPIOE->BSRR = (1U<<24);
	//Read converted result
	return (ADC1->DR);
 8000370:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 8000374:	6c1b      	ldr	r3, [r3, #64]	; 0x40
}
 8000376:	4618      	mov	r0, r3
 8000378:	46bd      	mov	sp, r7
 800037a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037e:	4770      	bx	lr
 8000380:	40021000 	.word	0x40021000
 8000384:	48001000 	.word	0x48001000

08000388 <main>:
#define PIN8					(1U<<8)
#define LED_PIN8				PIN8

uint32_t sensor_value;

int main(void) {
 8000388:	b580      	push	{r7, lr}
 800038a:	af00      	add	r7, sp, #0

	RCC->AHBENR |= GPIOEEN;
 800038c:	4b21      	ldr	r3, [pc, #132]	; (8000414 <main+0x8c>)
 800038e:	695b      	ldr	r3, [r3, #20]
 8000390:	4a20      	ldr	r2, [pc, #128]	; (8000414 <main+0x8c>)
 8000392:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000396:	6153      	str	r3, [r2, #20]
	GPIOE->MODER |= (1U<<30);
 8000398:	4b1f      	ldr	r3, [pc, #124]	; (8000418 <main+0x90>)
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	4a1e      	ldr	r2, [pc, #120]	; (8000418 <main+0x90>)
 800039e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80003a2:	6013      	str	r3, [r2, #0]
	GPIOE->MODER &=~(1U<<31);
 80003a4:	4b1c      	ldr	r3, [pc, #112]	; (8000418 <main+0x90>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	4a1b      	ldr	r2, [pc, #108]	; (8000418 <main+0x90>)
 80003aa:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80003ae:	6013      	str	r3, [r2, #0]
	GPIOE->MODER |= (1U<<16);
 80003b0:	4b19      	ldr	r3, [pc, #100]	; (8000418 <main+0x90>)
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	4a18      	ldr	r2, [pc, #96]	; (8000418 <main+0x90>)
 80003b6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80003ba:	6013      	str	r3, [r2, #0]
	GPIOE->MODER &= ~(1U<<17);
 80003bc:	4b16      	ldr	r3, [pc, #88]	; (8000418 <main+0x90>)
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	4a15      	ldr	r2, [pc, #84]	; (8000418 <main+0x90>)
 80003c2:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 80003c6:	6013      	str	r3, [r2, #0]



	pa_1_adc_init();
 80003c8:	f7ff ff5a 	bl	8000280 <pa_1_adc_init>
	start_conversion();
 80003cc:	f7ff ff88 	bl	80002e0 <start_conversion>

	while(1) {
		sensor_value = adc_read();
 80003d0:	f7ff ff96 	bl	8000300 <adc_read>
 80003d4:	4603      	mov	r3, r0
 80003d6:	4a11      	ldr	r2, [pc, #68]	; (800041c <main+0x94>)
 80003d8:	6013      	str	r3, [r2, #0]
//		GPIOE->BSRR = LED_PIN;
//		GPIOE->BSRR = LED_PIN8;
		printf("sensor value: %d \n\r", (int) sensor_value);
 80003da:	4b10      	ldr	r3, [pc, #64]	; (800041c <main+0x94>)
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	4619      	mov	r1, r3
 80003e0:	480f      	ldr	r0, [pc, #60]	; (8000420 <main+0x98>)
 80003e2:	f000 f9af 	bl	8000744 <iprintf>
		if ((int) sensor_value == 0) {
 80003e6:	4b0d      	ldr	r3, [pc, #52]	; (800041c <main+0x94>)
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	2b00      	cmp	r3, #0
 80003ec:	d108      	bne.n	8000400 <main+0x78>
			GPIOE->BSRR = (1U<<31);
 80003ee:	4b0a      	ldr	r3, [pc, #40]	; (8000418 <main+0x90>)
 80003f0:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80003f4:	619a      	str	r2, [r3, #24]
			GPIOE->BSRR = (1U<<24);
 80003f6:	4b08      	ldr	r3, [pc, #32]	; (8000418 <main+0x90>)
 80003f8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80003fc:	619a      	str	r2, [r3, #24]
 80003fe:	e7e7      	b.n	80003d0 <main+0x48>
//			GPIOE->BSRR = LED_PIN;
//			GPIOE->BSRR = LED_PIN8;
		} else {
			GPIOE->BSRR = (1U<<31);
 8000400:	4b05      	ldr	r3, [pc, #20]	; (8000418 <main+0x90>)
 8000402:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8000406:	619a      	str	r2, [r3, #24]
			GPIOE->BSRR = (1U<<24);
 8000408:	4b03      	ldr	r3, [pc, #12]	; (8000418 <main+0x90>)
 800040a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800040e:	619a      	str	r2, [r3, #24]
		sensor_value = adc_read();
 8000410:	e7de      	b.n	80003d0 <main+0x48>
 8000412:	bf00      	nop
 8000414:	40021000 	.word	0x40021000
 8000418:	48001000 	.word	0x48001000
 800041c:	20000078 	.word	0x20000078
 8000420:	08001440 	.word	0x08001440

08000424 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000424:	b580      	push	{r7, lr}
 8000426:	b086      	sub	sp, #24
 8000428:	af00      	add	r7, sp, #0
 800042a:	60f8      	str	r0, [r7, #12]
 800042c:	60b9      	str	r1, [r7, #8]
 800042e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000430:	2300      	movs	r3, #0
 8000432:	617b      	str	r3, [r7, #20]
 8000434:	e00a      	b.n	800044c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000436:	f3af 8000 	nop.w
 800043a:	4601      	mov	r1, r0
 800043c:	68bb      	ldr	r3, [r7, #8]
 800043e:	1c5a      	adds	r2, r3, #1
 8000440:	60ba      	str	r2, [r7, #8]
 8000442:	b2ca      	uxtb	r2, r1
 8000444:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000446:	697b      	ldr	r3, [r7, #20]
 8000448:	3301      	adds	r3, #1
 800044a:	617b      	str	r3, [r7, #20]
 800044c:	697a      	ldr	r2, [r7, #20]
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	429a      	cmp	r2, r3
 8000452:	dbf0      	blt.n	8000436 <_read+0x12>
  }

  return len;
 8000454:	687b      	ldr	r3, [r7, #4]
}
 8000456:	4618      	mov	r0, r3
 8000458:	3718      	adds	r7, #24
 800045a:	46bd      	mov	sp, r7
 800045c:	bd80      	pop	{r7, pc}

0800045e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800045e:	b580      	push	{r7, lr}
 8000460:	b086      	sub	sp, #24
 8000462:	af00      	add	r7, sp, #0
 8000464:	60f8      	str	r0, [r7, #12]
 8000466:	60b9      	str	r1, [r7, #8]
 8000468:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800046a:	2300      	movs	r3, #0
 800046c:	617b      	str	r3, [r7, #20]
 800046e:	e009      	b.n	8000484 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000470:	68bb      	ldr	r3, [r7, #8]
 8000472:	1c5a      	adds	r2, r3, #1
 8000474:	60ba      	str	r2, [r7, #8]
 8000476:	781b      	ldrb	r3, [r3, #0]
 8000478:	4618      	mov	r0, r3
 800047a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800047e:	697b      	ldr	r3, [r7, #20]
 8000480:	3301      	adds	r3, #1
 8000482:	617b      	str	r3, [r7, #20]
 8000484:	697a      	ldr	r2, [r7, #20]
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	429a      	cmp	r2, r3
 800048a:	dbf1      	blt.n	8000470 <_write+0x12>
  }
  return len;
 800048c:	687b      	ldr	r3, [r7, #4]
}
 800048e:	4618      	mov	r0, r3
 8000490:	3718      	adds	r7, #24
 8000492:	46bd      	mov	sp, r7
 8000494:	bd80      	pop	{r7, pc}

08000496 <_close>:

int _close(int file)
{
 8000496:	b480      	push	{r7}
 8000498:	b083      	sub	sp, #12
 800049a:	af00      	add	r7, sp, #0
 800049c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800049e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80004a2:	4618      	mov	r0, r3
 80004a4:	370c      	adds	r7, #12
 80004a6:	46bd      	mov	sp, r7
 80004a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ac:	4770      	bx	lr

080004ae <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004ae:	b480      	push	{r7}
 80004b0:	b083      	sub	sp, #12
 80004b2:	af00      	add	r7, sp, #0
 80004b4:	6078      	str	r0, [r7, #4]
 80004b6:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80004b8:	683b      	ldr	r3, [r7, #0]
 80004ba:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004be:	605a      	str	r2, [r3, #4]
  return 0;
 80004c0:	2300      	movs	r3, #0
}
 80004c2:	4618      	mov	r0, r3
 80004c4:	370c      	adds	r7, #12
 80004c6:	46bd      	mov	sp, r7
 80004c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004cc:	4770      	bx	lr

080004ce <_isatty>:

int _isatty(int file)
{
 80004ce:	b480      	push	{r7}
 80004d0:	b083      	sub	sp, #12
 80004d2:	af00      	add	r7, sp, #0
 80004d4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80004d6:	2301      	movs	r3, #1
}
 80004d8:	4618      	mov	r0, r3
 80004da:	370c      	adds	r7, #12
 80004dc:	46bd      	mov	sp, r7
 80004de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e2:	4770      	bx	lr

080004e4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004e4:	b480      	push	{r7}
 80004e6:	b085      	sub	sp, #20
 80004e8:	af00      	add	r7, sp, #0
 80004ea:	60f8      	str	r0, [r7, #12]
 80004ec:	60b9      	str	r1, [r7, #8]
 80004ee:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004f0:	2300      	movs	r3, #0
}
 80004f2:	4618      	mov	r0, r3
 80004f4:	3714      	adds	r7, #20
 80004f6:	46bd      	mov	sp, r7
 80004f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004fc:	4770      	bx	lr
	...

08000500 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000500:	b580      	push	{r7, lr}
 8000502:	b086      	sub	sp, #24
 8000504:	af00      	add	r7, sp, #0
 8000506:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000508:	4a14      	ldr	r2, [pc, #80]	; (800055c <_sbrk+0x5c>)
 800050a:	4b15      	ldr	r3, [pc, #84]	; (8000560 <_sbrk+0x60>)
 800050c:	1ad3      	subs	r3, r2, r3
 800050e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000510:	697b      	ldr	r3, [r7, #20]
 8000512:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000514:	4b13      	ldr	r3, [pc, #76]	; (8000564 <_sbrk+0x64>)
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	2b00      	cmp	r3, #0
 800051a:	d102      	bne.n	8000522 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800051c:	4b11      	ldr	r3, [pc, #68]	; (8000564 <_sbrk+0x64>)
 800051e:	4a12      	ldr	r2, [pc, #72]	; (8000568 <_sbrk+0x68>)
 8000520:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000522:	4b10      	ldr	r3, [pc, #64]	; (8000564 <_sbrk+0x64>)
 8000524:	681a      	ldr	r2, [r3, #0]
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	4413      	add	r3, r2
 800052a:	693a      	ldr	r2, [r7, #16]
 800052c:	429a      	cmp	r2, r3
 800052e:	d207      	bcs.n	8000540 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000530:	f000 f922 	bl	8000778 <__errno>
 8000534:	4603      	mov	r3, r0
 8000536:	220c      	movs	r2, #12
 8000538:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800053a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800053e:	e009      	b.n	8000554 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000540:	4b08      	ldr	r3, [pc, #32]	; (8000564 <_sbrk+0x64>)
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000546:	4b07      	ldr	r3, [pc, #28]	; (8000564 <_sbrk+0x64>)
 8000548:	681a      	ldr	r2, [r3, #0]
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	4413      	add	r3, r2
 800054e:	4a05      	ldr	r2, [pc, #20]	; (8000564 <_sbrk+0x64>)
 8000550:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000552:	68fb      	ldr	r3, [r7, #12]
}
 8000554:	4618      	mov	r0, r3
 8000556:	3718      	adds	r7, #24
 8000558:	46bd      	mov	sp, r7
 800055a:	bd80      	pop	{r7, pc}
 800055c:	2000a000 	.word	0x2000a000
 8000560:	00000400 	.word	0x00000400
 8000564:	2000007c 	.word	0x2000007c
 8000568:	200001d0 	.word	0x200001d0

0800056c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800056c:	480d      	ldr	r0, [pc, #52]	; (80005a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800056e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000570:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000574:	480c      	ldr	r0, [pc, #48]	; (80005a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000576:	490d      	ldr	r1, [pc, #52]	; (80005ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000578:	4a0d      	ldr	r2, [pc, #52]	; (80005b0 <LoopForever+0xe>)
  movs r3, #0
 800057a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800057c:	e002      	b.n	8000584 <LoopCopyDataInit>

0800057e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800057e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000580:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000582:	3304      	adds	r3, #4

08000584 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000584:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000586:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000588:	d3f9      	bcc.n	800057e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800058a:	4a0a      	ldr	r2, [pc, #40]	; (80005b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800058c:	4c0a      	ldr	r4, [pc, #40]	; (80005b8 <LoopForever+0x16>)
  movs r3, #0
 800058e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000590:	e001      	b.n	8000596 <LoopFillZerobss>

08000592 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000592:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000594:	3204      	adds	r2, #4

08000596 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000596:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000598:	d3fb      	bcc.n	8000592 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800059a:	f000 f8f3 	bl	8000784 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800059e:	f7ff fef3 	bl	8000388 <main>

080005a2 <LoopForever>:

LoopForever:
  b LoopForever
 80005a2:	e7fe      	b.n	80005a2 <LoopForever>
  ldr   r0, =_estack
 80005a4:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 80005a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005ac:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80005b0:	08001490 	.word	0x08001490
  ldr r2, =_sbss
 80005b4:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80005b8:	200001cc 	.word	0x200001cc

080005bc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005bc:	e7fe      	b.n	80005bc <ADC1_2_IRQHandler>
	...

080005c0 <std>:
 80005c0:	2300      	movs	r3, #0
 80005c2:	b510      	push	{r4, lr}
 80005c4:	4604      	mov	r4, r0
 80005c6:	e9c0 3300 	strd	r3, r3, [r0]
 80005ca:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80005ce:	6083      	str	r3, [r0, #8]
 80005d0:	8181      	strh	r1, [r0, #12]
 80005d2:	6643      	str	r3, [r0, #100]	; 0x64
 80005d4:	81c2      	strh	r2, [r0, #14]
 80005d6:	6183      	str	r3, [r0, #24]
 80005d8:	4619      	mov	r1, r3
 80005da:	2208      	movs	r2, #8
 80005dc:	305c      	adds	r0, #92	; 0x5c
 80005de:	f000 f8c3 	bl	8000768 <memset>
 80005e2:	4b0d      	ldr	r3, [pc, #52]	; (8000618 <std+0x58>)
 80005e4:	6263      	str	r3, [r4, #36]	; 0x24
 80005e6:	4b0d      	ldr	r3, [pc, #52]	; (800061c <std+0x5c>)
 80005e8:	62a3      	str	r3, [r4, #40]	; 0x28
 80005ea:	4b0d      	ldr	r3, [pc, #52]	; (8000620 <std+0x60>)
 80005ec:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005ee:	4b0d      	ldr	r3, [pc, #52]	; (8000624 <std+0x64>)
 80005f0:	6323      	str	r3, [r4, #48]	; 0x30
 80005f2:	4b0d      	ldr	r3, [pc, #52]	; (8000628 <std+0x68>)
 80005f4:	6224      	str	r4, [r4, #32]
 80005f6:	429c      	cmp	r4, r3
 80005f8:	d006      	beq.n	8000608 <std+0x48>
 80005fa:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80005fe:	4294      	cmp	r4, r2
 8000600:	d002      	beq.n	8000608 <std+0x48>
 8000602:	33d0      	adds	r3, #208	; 0xd0
 8000604:	429c      	cmp	r4, r3
 8000606:	d105      	bne.n	8000614 <std+0x54>
 8000608:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800060c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000610:	f000 b8dc 	b.w	80007cc <__retarget_lock_init_recursive>
 8000614:	bd10      	pop	{r4, pc}
 8000616:	bf00      	nop
 8000618:	0800102d 	.word	0x0800102d
 800061c:	0800104f 	.word	0x0800104f
 8000620:	08001087 	.word	0x08001087
 8000624:	080010ab 	.word	0x080010ab
 8000628:	20000080 	.word	0x20000080

0800062c <stdio_exit_handler>:
 800062c:	4a02      	ldr	r2, [pc, #8]	; (8000638 <stdio_exit_handler+0xc>)
 800062e:	4903      	ldr	r1, [pc, #12]	; (800063c <stdio_exit_handler+0x10>)
 8000630:	4803      	ldr	r0, [pc, #12]	; (8000640 <stdio_exit_handler+0x14>)
 8000632:	f000 b869 	b.w	8000708 <_fwalk_sglue>
 8000636:	bf00      	nop
 8000638:	20000000 	.word	0x20000000
 800063c:	08000fc5 	.word	0x08000fc5
 8000640:	2000000c 	.word	0x2000000c

08000644 <cleanup_stdio>:
 8000644:	6841      	ldr	r1, [r0, #4]
 8000646:	4b0c      	ldr	r3, [pc, #48]	; (8000678 <cleanup_stdio+0x34>)
 8000648:	4299      	cmp	r1, r3
 800064a:	b510      	push	{r4, lr}
 800064c:	4604      	mov	r4, r0
 800064e:	d001      	beq.n	8000654 <cleanup_stdio+0x10>
 8000650:	f000 fcb8 	bl	8000fc4 <_fflush_r>
 8000654:	68a1      	ldr	r1, [r4, #8]
 8000656:	4b09      	ldr	r3, [pc, #36]	; (800067c <cleanup_stdio+0x38>)
 8000658:	4299      	cmp	r1, r3
 800065a:	d002      	beq.n	8000662 <cleanup_stdio+0x1e>
 800065c:	4620      	mov	r0, r4
 800065e:	f000 fcb1 	bl	8000fc4 <_fflush_r>
 8000662:	68e1      	ldr	r1, [r4, #12]
 8000664:	4b06      	ldr	r3, [pc, #24]	; (8000680 <cleanup_stdio+0x3c>)
 8000666:	4299      	cmp	r1, r3
 8000668:	d004      	beq.n	8000674 <cleanup_stdio+0x30>
 800066a:	4620      	mov	r0, r4
 800066c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000670:	f000 bca8 	b.w	8000fc4 <_fflush_r>
 8000674:	bd10      	pop	{r4, pc}
 8000676:	bf00      	nop
 8000678:	20000080 	.word	0x20000080
 800067c:	200000e8 	.word	0x200000e8
 8000680:	20000150 	.word	0x20000150

08000684 <global_stdio_init.part.0>:
 8000684:	b510      	push	{r4, lr}
 8000686:	4b0b      	ldr	r3, [pc, #44]	; (80006b4 <global_stdio_init.part.0+0x30>)
 8000688:	4c0b      	ldr	r4, [pc, #44]	; (80006b8 <global_stdio_init.part.0+0x34>)
 800068a:	4a0c      	ldr	r2, [pc, #48]	; (80006bc <global_stdio_init.part.0+0x38>)
 800068c:	601a      	str	r2, [r3, #0]
 800068e:	4620      	mov	r0, r4
 8000690:	2200      	movs	r2, #0
 8000692:	2104      	movs	r1, #4
 8000694:	f7ff ff94 	bl	80005c0 <std>
 8000698:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800069c:	2201      	movs	r2, #1
 800069e:	2109      	movs	r1, #9
 80006a0:	f7ff ff8e 	bl	80005c0 <std>
 80006a4:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80006a8:	2202      	movs	r2, #2
 80006aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006ae:	2112      	movs	r1, #18
 80006b0:	f7ff bf86 	b.w	80005c0 <std>
 80006b4:	200001b8 	.word	0x200001b8
 80006b8:	20000080 	.word	0x20000080
 80006bc:	0800062d 	.word	0x0800062d

080006c0 <__sfp_lock_acquire>:
 80006c0:	4801      	ldr	r0, [pc, #4]	; (80006c8 <__sfp_lock_acquire+0x8>)
 80006c2:	f000 b884 	b.w	80007ce <__retarget_lock_acquire_recursive>
 80006c6:	bf00      	nop
 80006c8:	200001bd 	.word	0x200001bd

080006cc <__sfp_lock_release>:
 80006cc:	4801      	ldr	r0, [pc, #4]	; (80006d4 <__sfp_lock_release+0x8>)
 80006ce:	f000 b87f 	b.w	80007d0 <__retarget_lock_release_recursive>
 80006d2:	bf00      	nop
 80006d4:	200001bd 	.word	0x200001bd

080006d8 <__sinit>:
 80006d8:	b510      	push	{r4, lr}
 80006da:	4604      	mov	r4, r0
 80006dc:	f7ff fff0 	bl	80006c0 <__sfp_lock_acquire>
 80006e0:	6a23      	ldr	r3, [r4, #32]
 80006e2:	b11b      	cbz	r3, 80006ec <__sinit+0x14>
 80006e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006e8:	f7ff bff0 	b.w	80006cc <__sfp_lock_release>
 80006ec:	4b04      	ldr	r3, [pc, #16]	; (8000700 <__sinit+0x28>)
 80006ee:	6223      	str	r3, [r4, #32]
 80006f0:	4b04      	ldr	r3, [pc, #16]	; (8000704 <__sinit+0x2c>)
 80006f2:	681b      	ldr	r3, [r3, #0]
 80006f4:	2b00      	cmp	r3, #0
 80006f6:	d1f5      	bne.n	80006e4 <__sinit+0xc>
 80006f8:	f7ff ffc4 	bl	8000684 <global_stdio_init.part.0>
 80006fc:	e7f2      	b.n	80006e4 <__sinit+0xc>
 80006fe:	bf00      	nop
 8000700:	08000645 	.word	0x08000645
 8000704:	200001b8 	.word	0x200001b8

08000708 <_fwalk_sglue>:
 8000708:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800070c:	4607      	mov	r7, r0
 800070e:	4688      	mov	r8, r1
 8000710:	4614      	mov	r4, r2
 8000712:	2600      	movs	r6, #0
 8000714:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000718:	f1b9 0901 	subs.w	r9, r9, #1
 800071c:	d505      	bpl.n	800072a <_fwalk_sglue+0x22>
 800071e:	6824      	ldr	r4, [r4, #0]
 8000720:	2c00      	cmp	r4, #0
 8000722:	d1f7      	bne.n	8000714 <_fwalk_sglue+0xc>
 8000724:	4630      	mov	r0, r6
 8000726:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800072a:	89ab      	ldrh	r3, [r5, #12]
 800072c:	2b01      	cmp	r3, #1
 800072e:	d907      	bls.n	8000740 <_fwalk_sglue+0x38>
 8000730:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000734:	3301      	adds	r3, #1
 8000736:	d003      	beq.n	8000740 <_fwalk_sglue+0x38>
 8000738:	4629      	mov	r1, r5
 800073a:	4638      	mov	r0, r7
 800073c:	47c0      	blx	r8
 800073e:	4306      	orrs	r6, r0
 8000740:	3568      	adds	r5, #104	; 0x68
 8000742:	e7e9      	b.n	8000718 <_fwalk_sglue+0x10>

08000744 <iprintf>:
 8000744:	b40f      	push	{r0, r1, r2, r3}
 8000746:	b507      	push	{r0, r1, r2, lr}
 8000748:	4906      	ldr	r1, [pc, #24]	; (8000764 <iprintf+0x20>)
 800074a:	ab04      	add	r3, sp, #16
 800074c:	6808      	ldr	r0, [r1, #0]
 800074e:	f853 2b04 	ldr.w	r2, [r3], #4
 8000752:	6881      	ldr	r1, [r0, #8]
 8000754:	9301      	str	r3, [sp, #4]
 8000756:	f000 f865 	bl	8000824 <_vfiprintf_r>
 800075a:	b003      	add	sp, #12
 800075c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000760:	b004      	add	sp, #16
 8000762:	4770      	bx	lr
 8000764:	20000058 	.word	0x20000058

08000768 <memset>:
 8000768:	4402      	add	r2, r0
 800076a:	4603      	mov	r3, r0
 800076c:	4293      	cmp	r3, r2
 800076e:	d100      	bne.n	8000772 <memset+0xa>
 8000770:	4770      	bx	lr
 8000772:	f803 1b01 	strb.w	r1, [r3], #1
 8000776:	e7f9      	b.n	800076c <memset+0x4>

08000778 <__errno>:
 8000778:	4b01      	ldr	r3, [pc, #4]	; (8000780 <__errno+0x8>)
 800077a:	6818      	ldr	r0, [r3, #0]
 800077c:	4770      	bx	lr
 800077e:	bf00      	nop
 8000780:	20000058 	.word	0x20000058

08000784 <__libc_init_array>:
 8000784:	b570      	push	{r4, r5, r6, lr}
 8000786:	4d0d      	ldr	r5, [pc, #52]	; (80007bc <__libc_init_array+0x38>)
 8000788:	4c0d      	ldr	r4, [pc, #52]	; (80007c0 <__libc_init_array+0x3c>)
 800078a:	1b64      	subs	r4, r4, r5
 800078c:	10a4      	asrs	r4, r4, #2
 800078e:	2600      	movs	r6, #0
 8000790:	42a6      	cmp	r6, r4
 8000792:	d109      	bne.n	80007a8 <__libc_init_array+0x24>
 8000794:	4d0b      	ldr	r5, [pc, #44]	; (80007c4 <__libc_init_array+0x40>)
 8000796:	4c0c      	ldr	r4, [pc, #48]	; (80007c8 <__libc_init_array+0x44>)
 8000798:	f000 fe46 	bl	8001428 <_init>
 800079c:	1b64      	subs	r4, r4, r5
 800079e:	10a4      	asrs	r4, r4, #2
 80007a0:	2600      	movs	r6, #0
 80007a2:	42a6      	cmp	r6, r4
 80007a4:	d105      	bne.n	80007b2 <__libc_init_array+0x2e>
 80007a6:	bd70      	pop	{r4, r5, r6, pc}
 80007a8:	f855 3b04 	ldr.w	r3, [r5], #4
 80007ac:	4798      	blx	r3
 80007ae:	3601      	adds	r6, #1
 80007b0:	e7ee      	b.n	8000790 <__libc_init_array+0xc>
 80007b2:	f855 3b04 	ldr.w	r3, [r5], #4
 80007b6:	4798      	blx	r3
 80007b8:	3601      	adds	r6, #1
 80007ba:	e7f2      	b.n	80007a2 <__libc_init_array+0x1e>
 80007bc:	08001488 	.word	0x08001488
 80007c0:	08001488 	.word	0x08001488
 80007c4:	08001488 	.word	0x08001488
 80007c8:	0800148c 	.word	0x0800148c

080007cc <__retarget_lock_init_recursive>:
 80007cc:	4770      	bx	lr

080007ce <__retarget_lock_acquire_recursive>:
 80007ce:	4770      	bx	lr

080007d0 <__retarget_lock_release_recursive>:
 80007d0:	4770      	bx	lr

080007d2 <__sfputc_r>:
 80007d2:	6893      	ldr	r3, [r2, #8]
 80007d4:	3b01      	subs	r3, #1
 80007d6:	2b00      	cmp	r3, #0
 80007d8:	b410      	push	{r4}
 80007da:	6093      	str	r3, [r2, #8]
 80007dc:	da08      	bge.n	80007f0 <__sfputc_r+0x1e>
 80007de:	6994      	ldr	r4, [r2, #24]
 80007e0:	42a3      	cmp	r3, r4
 80007e2:	db01      	blt.n	80007e8 <__sfputc_r+0x16>
 80007e4:	290a      	cmp	r1, #10
 80007e6:	d103      	bne.n	80007f0 <__sfputc_r+0x1e>
 80007e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80007ec:	f000 bc61 	b.w	80010b2 <__swbuf_r>
 80007f0:	6813      	ldr	r3, [r2, #0]
 80007f2:	1c58      	adds	r0, r3, #1
 80007f4:	6010      	str	r0, [r2, #0]
 80007f6:	7019      	strb	r1, [r3, #0]
 80007f8:	4608      	mov	r0, r1
 80007fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80007fe:	4770      	bx	lr

08000800 <__sfputs_r>:
 8000800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000802:	4606      	mov	r6, r0
 8000804:	460f      	mov	r7, r1
 8000806:	4614      	mov	r4, r2
 8000808:	18d5      	adds	r5, r2, r3
 800080a:	42ac      	cmp	r4, r5
 800080c:	d101      	bne.n	8000812 <__sfputs_r+0x12>
 800080e:	2000      	movs	r0, #0
 8000810:	e007      	b.n	8000822 <__sfputs_r+0x22>
 8000812:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000816:	463a      	mov	r2, r7
 8000818:	4630      	mov	r0, r6
 800081a:	f7ff ffda 	bl	80007d2 <__sfputc_r>
 800081e:	1c43      	adds	r3, r0, #1
 8000820:	d1f3      	bne.n	800080a <__sfputs_r+0xa>
 8000822:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000824 <_vfiprintf_r>:
 8000824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000828:	460d      	mov	r5, r1
 800082a:	b09d      	sub	sp, #116	; 0x74
 800082c:	4614      	mov	r4, r2
 800082e:	4698      	mov	r8, r3
 8000830:	4606      	mov	r6, r0
 8000832:	b118      	cbz	r0, 800083c <_vfiprintf_r+0x18>
 8000834:	6a03      	ldr	r3, [r0, #32]
 8000836:	b90b      	cbnz	r3, 800083c <_vfiprintf_r+0x18>
 8000838:	f7ff ff4e 	bl	80006d8 <__sinit>
 800083c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800083e:	07d9      	lsls	r1, r3, #31
 8000840:	d405      	bmi.n	800084e <_vfiprintf_r+0x2a>
 8000842:	89ab      	ldrh	r3, [r5, #12]
 8000844:	059a      	lsls	r2, r3, #22
 8000846:	d402      	bmi.n	800084e <_vfiprintf_r+0x2a>
 8000848:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800084a:	f7ff ffc0 	bl	80007ce <__retarget_lock_acquire_recursive>
 800084e:	89ab      	ldrh	r3, [r5, #12]
 8000850:	071b      	lsls	r3, r3, #28
 8000852:	d501      	bpl.n	8000858 <_vfiprintf_r+0x34>
 8000854:	692b      	ldr	r3, [r5, #16]
 8000856:	b99b      	cbnz	r3, 8000880 <_vfiprintf_r+0x5c>
 8000858:	4629      	mov	r1, r5
 800085a:	4630      	mov	r0, r6
 800085c:	f000 fc66 	bl	800112c <__swsetup_r>
 8000860:	b170      	cbz	r0, 8000880 <_vfiprintf_r+0x5c>
 8000862:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000864:	07dc      	lsls	r4, r3, #31
 8000866:	d504      	bpl.n	8000872 <_vfiprintf_r+0x4e>
 8000868:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800086c:	b01d      	add	sp, #116	; 0x74
 800086e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000872:	89ab      	ldrh	r3, [r5, #12]
 8000874:	0598      	lsls	r0, r3, #22
 8000876:	d4f7      	bmi.n	8000868 <_vfiprintf_r+0x44>
 8000878:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800087a:	f7ff ffa9 	bl	80007d0 <__retarget_lock_release_recursive>
 800087e:	e7f3      	b.n	8000868 <_vfiprintf_r+0x44>
 8000880:	2300      	movs	r3, #0
 8000882:	9309      	str	r3, [sp, #36]	; 0x24
 8000884:	2320      	movs	r3, #32
 8000886:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800088a:	f8cd 800c 	str.w	r8, [sp, #12]
 800088e:	2330      	movs	r3, #48	; 0x30
 8000890:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000a44 <_vfiprintf_r+0x220>
 8000894:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000898:	f04f 0901 	mov.w	r9, #1
 800089c:	4623      	mov	r3, r4
 800089e:	469a      	mov	sl, r3
 80008a0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80008a4:	b10a      	cbz	r2, 80008aa <_vfiprintf_r+0x86>
 80008a6:	2a25      	cmp	r2, #37	; 0x25
 80008a8:	d1f9      	bne.n	800089e <_vfiprintf_r+0x7a>
 80008aa:	ebba 0b04 	subs.w	fp, sl, r4
 80008ae:	d00b      	beq.n	80008c8 <_vfiprintf_r+0xa4>
 80008b0:	465b      	mov	r3, fp
 80008b2:	4622      	mov	r2, r4
 80008b4:	4629      	mov	r1, r5
 80008b6:	4630      	mov	r0, r6
 80008b8:	f7ff ffa2 	bl	8000800 <__sfputs_r>
 80008bc:	3001      	adds	r0, #1
 80008be:	f000 80a9 	beq.w	8000a14 <_vfiprintf_r+0x1f0>
 80008c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80008c4:	445a      	add	r2, fp
 80008c6:	9209      	str	r2, [sp, #36]	; 0x24
 80008c8:	f89a 3000 	ldrb.w	r3, [sl]
 80008cc:	2b00      	cmp	r3, #0
 80008ce:	f000 80a1 	beq.w	8000a14 <_vfiprintf_r+0x1f0>
 80008d2:	2300      	movs	r3, #0
 80008d4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80008d8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80008dc:	f10a 0a01 	add.w	sl, sl, #1
 80008e0:	9304      	str	r3, [sp, #16]
 80008e2:	9307      	str	r3, [sp, #28]
 80008e4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80008e8:	931a      	str	r3, [sp, #104]	; 0x68
 80008ea:	4654      	mov	r4, sl
 80008ec:	2205      	movs	r2, #5
 80008ee:	f814 1b01 	ldrb.w	r1, [r4], #1
 80008f2:	4854      	ldr	r0, [pc, #336]	; (8000a44 <_vfiprintf_r+0x220>)
 80008f4:	f7ff fc74 	bl	80001e0 <memchr>
 80008f8:	9a04      	ldr	r2, [sp, #16]
 80008fa:	b9d8      	cbnz	r0, 8000934 <_vfiprintf_r+0x110>
 80008fc:	06d1      	lsls	r1, r2, #27
 80008fe:	bf44      	itt	mi
 8000900:	2320      	movmi	r3, #32
 8000902:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000906:	0713      	lsls	r3, r2, #28
 8000908:	bf44      	itt	mi
 800090a:	232b      	movmi	r3, #43	; 0x2b
 800090c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000910:	f89a 3000 	ldrb.w	r3, [sl]
 8000914:	2b2a      	cmp	r3, #42	; 0x2a
 8000916:	d015      	beq.n	8000944 <_vfiprintf_r+0x120>
 8000918:	9a07      	ldr	r2, [sp, #28]
 800091a:	4654      	mov	r4, sl
 800091c:	2000      	movs	r0, #0
 800091e:	f04f 0c0a 	mov.w	ip, #10
 8000922:	4621      	mov	r1, r4
 8000924:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000928:	3b30      	subs	r3, #48	; 0x30
 800092a:	2b09      	cmp	r3, #9
 800092c:	d94d      	bls.n	80009ca <_vfiprintf_r+0x1a6>
 800092e:	b1b0      	cbz	r0, 800095e <_vfiprintf_r+0x13a>
 8000930:	9207      	str	r2, [sp, #28]
 8000932:	e014      	b.n	800095e <_vfiprintf_r+0x13a>
 8000934:	eba0 0308 	sub.w	r3, r0, r8
 8000938:	fa09 f303 	lsl.w	r3, r9, r3
 800093c:	4313      	orrs	r3, r2
 800093e:	9304      	str	r3, [sp, #16]
 8000940:	46a2      	mov	sl, r4
 8000942:	e7d2      	b.n	80008ea <_vfiprintf_r+0xc6>
 8000944:	9b03      	ldr	r3, [sp, #12]
 8000946:	1d19      	adds	r1, r3, #4
 8000948:	681b      	ldr	r3, [r3, #0]
 800094a:	9103      	str	r1, [sp, #12]
 800094c:	2b00      	cmp	r3, #0
 800094e:	bfbb      	ittet	lt
 8000950:	425b      	neglt	r3, r3
 8000952:	f042 0202 	orrlt.w	r2, r2, #2
 8000956:	9307      	strge	r3, [sp, #28]
 8000958:	9307      	strlt	r3, [sp, #28]
 800095a:	bfb8      	it	lt
 800095c:	9204      	strlt	r2, [sp, #16]
 800095e:	7823      	ldrb	r3, [r4, #0]
 8000960:	2b2e      	cmp	r3, #46	; 0x2e
 8000962:	d10c      	bne.n	800097e <_vfiprintf_r+0x15a>
 8000964:	7863      	ldrb	r3, [r4, #1]
 8000966:	2b2a      	cmp	r3, #42	; 0x2a
 8000968:	d134      	bne.n	80009d4 <_vfiprintf_r+0x1b0>
 800096a:	9b03      	ldr	r3, [sp, #12]
 800096c:	1d1a      	adds	r2, r3, #4
 800096e:	681b      	ldr	r3, [r3, #0]
 8000970:	9203      	str	r2, [sp, #12]
 8000972:	2b00      	cmp	r3, #0
 8000974:	bfb8      	it	lt
 8000976:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800097a:	3402      	adds	r4, #2
 800097c:	9305      	str	r3, [sp, #20]
 800097e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000a54 <_vfiprintf_r+0x230>
 8000982:	7821      	ldrb	r1, [r4, #0]
 8000984:	2203      	movs	r2, #3
 8000986:	4650      	mov	r0, sl
 8000988:	f7ff fc2a 	bl	80001e0 <memchr>
 800098c:	b138      	cbz	r0, 800099e <_vfiprintf_r+0x17a>
 800098e:	9b04      	ldr	r3, [sp, #16]
 8000990:	eba0 000a 	sub.w	r0, r0, sl
 8000994:	2240      	movs	r2, #64	; 0x40
 8000996:	4082      	lsls	r2, r0
 8000998:	4313      	orrs	r3, r2
 800099a:	3401      	adds	r4, #1
 800099c:	9304      	str	r3, [sp, #16]
 800099e:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009a2:	4829      	ldr	r0, [pc, #164]	; (8000a48 <_vfiprintf_r+0x224>)
 80009a4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80009a8:	2206      	movs	r2, #6
 80009aa:	f7ff fc19 	bl	80001e0 <memchr>
 80009ae:	2800      	cmp	r0, #0
 80009b0:	d03f      	beq.n	8000a32 <_vfiprintf_r+0x20e>
 80009b2:	4b26      	ldr	r3, [pc, #152]	; (8000a4c <_vfiprintf_r+0x228>)
 80009b4:	bb1b      	cbnz	r3, 80009fe <_vfiprintf_r+0x1da>
 80009b6:	9b03      	ldr	r3, [sp, #12]
 80009b8:	3307      	adds	r3, #7
 80009ba:	f023 0307 	bic.w	r3, r3, #7
 80009be:	3308      	adds	r3, #8
 80009c0:	9303      	str	r3, [sp, #12]
 80009c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80009c4:	443b      	add	r3, r7
 80009c6:	9309      	str	r3, [sp, #36]	; 0x24
 80009c8:	e768      	b.n	800089c <_vfiprintf_r+0x78>
 80009ca:	fb0c 3202 	mla	r2, ip, r2, r3
 80009ce:	460c      	mov	r4, r1
 80009d0:	2001      	movs	r0, #1
 80009d2:	e7a6      	b.n	8000922 <_vfiprintf_r+0xfe>
 80009d4:	2300      	movs	r3, #0
 80009d6:	3401      	adds	r4, #1
 80009d8:	9305      	str	r3, [sp, #20]
 80009da:	4619      	mov	r1, r3
 80009dc:	f04f 0c0a 	mov.w	ip, #10
 80009e0:	4620      	mov	r0, r4
 80009e2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80009e6:	3a30      	subs	r2, #48	; 0x30
 80009e8:	2a09      	cmp	r2, #9
 80009ea:	d903      	bls.n	80009f4 <_vfiprintf_r+0x1d0>
 80009ec:	2b00      	cmp	r3, #0
 80009ee:	d0c6      	beq.n	800097e <_vfiprintf_r+0x15a>
 80009f0:	9105      	str	r1, [sp, #20]
 80009f2:	e7c4      	b.n	800097e <_vfiprintf_r+0x15a>
 80009f4:	fb0c 2101 	mla	r1, ip, r1, r2
 80009f8:	4604      	mov	r4, r0
 80009fa:	2301      	movs	r3, #1
 80009fc:	e7f0      	b.n	80009e0 <_vfiprintf_r+0x1bc>
 80009fe:	ab03      	add	r3, sp, #12
 8000a00:	9300      	str	r3, [sp, #0]
 8000a02:	462a      	mov	r2, r5
 8000a04:	4b12      	ldr	r3, [pc, #72]	; (8000a50 <_vfiprintf_r+0x22c>)
 8000a06:	a904      	add	r1, sp, #16
 8000a08:	4630      	mov	r0, r6
 8000a0a:	f3af 8000 	nop.w
 8000a0e:	4607      	mov	r7, r0
 8000a10:	1c78      	adds	r0, r7, #1
 8000a12:	d1d6      	bne.n	80009c2 <_vfiprintf_r+0x19e>
 8000a14:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a16:	07d9      	lsls	r1, r3, #31
 8000a18:	d405      	bmi.n	8000a26 <_vfiprintf_r+0x202>
 8000a1a:	89ab      	ldrh	r3, [r5, #12]
 8000a1c:	059a      	lsls	r2, r3, #22
 8000a1e:	d402      	bmi.n	8000a26 <_vfiprintf_r+0x202>
 8000a20:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a22:	f7ff fed5 	bl	80007d0 <__retarget_lock_release_recursive>
 8000a26:	89ab      	ldrh	r3, [r5, #12]
 8000a28:	065b      	lsls	r3, r3, #25
 8000a2a:	f53f af1d 	bmi.w	8000868 <_vfiprintf_r+0x44>
 8000a2e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000a30:	e71c      	b.n	800086c <_vfiprintf_r+0x48>
 8000a32:	ab03      	add	r3, sp, #12
 8000a34:	9300      	str	r3, [sp, #0]
 8000a36:	462a      	mov	r2, r5
 8000a38:	4b05      	ldr	r3, [pc, #20]	; (8000a50 <_vfiprintf_r+0x22c>)
 8000a3a:	a904      	add	r1, sp, #16
 8000a3c:	4630      	mov	r0, r6
 8000a3e:	f000 f919 	bl	8000c74 <_printf_i>
 8000a42:	e7e4      	b.n	8000a0e <_vfiprintf_r+0x1ea>
 8000a44:	08001454 	.word	0x08001454
 8000a48:	0800145e 	.word	0x0800145e
 8000a4c:	00000000 	.word	0x00000000
 8000a50:	08000801 	.word	0x08000801
 8000a54:	0800145a 	.word	0x0800145a

08000a58 <sbrk_aligned>:
 8000a58:	b570      	push	{r4, r5, r6, lr}
 8000a5a:	4e0e      	ldr	r6, [pc, #56]	; (8000a94 <sbrk_aligned+0x3c>)
 8000a5c:	460c      	mov	r4, r1
 8000a5e:	6831      	ldr	r1, [r6, #0]
 8000a60:	4605      	mov	r5, r0
 8000a62:	b911      	cbnz	r1, 8000a6a <sbrk_aligned+0x12>
 8000a64:	f000 fc72 	bl	800134c <_sbrk_r>
 8000a68:	6030      	str	r0, [r6, #0]
 8000a6a:	4621      	mov	r1, r4
 8000a6c:	4628      	mov	r0, r5
 8000a6e:	f000 fc6d 	bl	800134c <_sbrk_r>
 8000a72:	1c43      	adds	r3, r0, #1
 8000a74:	d00a      	beq.n	8000a8c <sbrk_aligned+0x34>
 8000a76:	1cc4      	adds	r4, r0, #3
 8000a78:	f024 0403 	bic.w	r4, r4, #3
 8000a7c:	42a0      	cmp	r0, r4
 8000a7e:	d007      	beq.n	8000a90 <sbrk_aligned+0x38>
 8000a80:	1a21      	subs	r1, r4, r0
 8000a82:	4628      	mov	r0, r5
 8000a84:	f000 fc62 	bl	800134c <_sbrk_r>
 8000a88:	3001      	adds	r0, #1
 8000a8a:	d101      	bne.n	8000a90 <sbrk_aligned+0x38>
 8000a8c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000a90:	4620      	mov	r0, r4
 8000a92:	bd70      	pop	{r4, r5, r6, pc}
 8000a94:	200001c4 	.word	0x200001c4

08000a98 <_malloc_r>:
 8000a98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a9c:	1ccd      	adds	r5, r1, #3
 8000a9e:	f025 0503 	bic.w	r5, r5, #3
 8000aa2:	3508      	adds	r5, #8
 8000aa4:	2d0c      	cmp	r5, #12
 8000aa6:	bf38      	it	cc
 8000aa8:	250c      	movcc	r5, #12
 8000aaa:	2d00      	cmp	r5, #0
 8000aac:	4607      	mov	r7, r0
 8000aae:	db01      	blt.n	8000ab4 <_malloc_r+0x1c>
 8000ab0:	42a9      	cmp	r1, r5
 8000ab2:	d905      	bls.n	8000ac0 <_malloc_r+0x28>
 8000ab4:	230c      	movs	r3, #12
 8000ab6:	603b      	str	r3, [r7, #0]
 8000ab8:	2600      	movs	r6, #0
 8000aba:	4630      	mov	r0, r6
 8000abc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ac0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000b94 <_malloc_r+0xfc>
 8000ac4:	f000 faa6 	bl	8001014 <__malloc_lock>
 8000ac8:	f8d8 3000 	ldr.w	r3, [r8]
 8000acc:	461c      	mov	r4, r3
 8000ace:	bb5c      	cbnz	r4, 8000b28 <_malloc_r+0x90>
 8000ad0:	4629      	mov	r1, r5
 8000ad2:	4638      	mov	r0, r7
 8000ad4:	f7ff ffc0 	bl	8000a58 <sbrk_aligned>
 8000ad8:	1c43      	adds	r3, r0, #1
 8000ada:	4604      	mov	r4, r0
 8000adc:	d155      	bne.n	8000b8a <_malloc_r+0xf2>
 8000ade:	f8d8 4000 	ldr.w	r4, [r8]
 8000ae2:	4626      	mov	r6, r4
 8000ae4:	2e00      	cmp	r6, #0
 8000ae6:	d145      	bne.n	8000b74 <_malloc_r+0xdc>
 8000ae8:	2c00      	cmp	r4, #0
 8000aea:	d048      	beq.n	8000b7e <_malloc_r+0xe6>
 8000aec:	6823      	ldr	r3, [r4, #0]
 8000aee:	4631      	mov	r1, r6
 8000af0:	4638      	mov	r0, r7
 8000af2:	eb04 0903 	add.w	r9, r4, r3
 8000af6:	f000 fc29 	bl	800134c <_sbrk_r>
 8000afa:	4581      	cmp	r9, r0
 8000afc:	d13f      	bne.n	8000b7e <_malloc_r+0xe6>
 8000afe:	6821      	ldr	r1, [r4, #0]
 8000b00:	1a6d      	subs	r5, r5, r1
 8000b02:	4629      	mov	r1, r5
 8000b04:	4638      	mov	r0, r7
 8000b06:	f7ff ffa7 	bl	8000a58 <sbrk_aligned>
 8000b0a:	3001      	adds	r0, #1
 8000b0c:	d037      	beq.n	8000b7e <_malloc_r+0xe6>
 8000b0e:	6823      	ldr	r3, [r4, #0]
 8000b10:	442b      	add	r3, r5
 8000b12:	6023      	str	r3, [r4, #0]
 8000b14:	f8d8 3000 	ldr.w	r3, [r8]
 8000b18:	2b00      	cmp	r3, #0
 8000b1a:	d038      	beq.n	8000b8e <_malloc_r+0xf6>
 8000b1c:	685a      	ldr	r2, [r3, #4]
 8000b1e:	42a2      	cmp	r2, r4
 8000b20:	d12b      	bne.n	8000b7a <_malloc_r+0xe2>
 8000b22:	2200      	movs	r2, #0
 8000b24:	605a      	str	r2, [r3, #4]
 8000b26:	e00f      	b.n	8000b48 <_malloc_r+0xb0>
 8000b28:	6822      	ldr	r2, [r4, #0]
 8000b2a:	1b52      	subs	r2, r2, r5
 8000b2c:	d41f      	bmi.n	8000b6e <_malloc_r+0xd6>
 8000b2e:	2a0b      	cmp	r2, #11
 8000b30:	d917      	bls.n	8000b62 <_malloc_r+0xca>
 8000b32:	1961      	adds	r1, r4, r5
 8000b34:	42a3      	cmp	r3, r4
 8000b36:	6025      	str	r5, [r4, #0]
 8000b38:	bf18      	it	ne
 8000b3a:	6059      	strne	r1, [r3, #4]
 8000b3c:	6863      	ldr	r3, [r4, #4]
 8000b3e:	bf08      	it	eq
 8000b40:	f8c8 1000 	streq.w	r1, [r8]
 8000b44:	5162      	str	r2, [r4, r5]
 8000b46:	604b      	str	r3, [r1, #4]
 8000b48:	4638      	mov	r0, r7
 8000b4a:	f104 060b 	add.w	r6, r4, #11
 8000b4e:	f000 fa67 	bl	8001020 <__malloc_unlock>
 8000b52:	f026 0607 	bic.w	r6, r6, #7
 8000b56:	1d23      	adds	r3, r4, #4
 8000b58:	1af2      	subs	r2, r6, r3
 8000b5a:	d0ae      	beq.n	8000aba <_malloc_r+0x22>
 8000b5c:	1b9b      	subs	r3, r3, r6
 8000b5e:	50a3      	str	r3, [r4, r2]
 8000b60:	e7ab      	b.n	8000aba <_malloc_r+0x22>
 8000b62:	42a3      	cmp	r3, r4
 8000b64:	6862      	ldr	r2, [r4, #4]
 8000b66:	d1dd      	bne.n	8000b24 <_malloc_r+0x8c>
 8000b68:	f8c8 2000 	str.w	r2, [r8]
 8000b6c:	e7ec      	b.n	8000b48 <_malloc_r+0xb0>
 8000b6e:	4623      	mov	r3, r4
 8000b70:	6864      	ldr	r4, [r4, #4]
 8000b72:	e7ac      	b.n	8000ace <_malloc_r+0x36>
 8000b74:	4634      	mov	r4, r6
 8000b76:	6876      	ldr	r6, [r6, #4]
 8000b78:	e7b4      	b.n	8000ae4 <_malloc_r+0x4c>
 8000b7a:	4613      	mov	r3, r2
 8000b7c:	e7cc      	b.n	8000b18 <_malloc_r+0x80>
 8000b7e:	230c      	movs	r3, #12
 8000b80:	603b      	str	r3, [r7, #0]
 8000b82:	4638      	mov	r0, r7
 8000b84:	f000 fa4c 	bl	8001020 <__malloc_unlock>
 8000b88:	e797      	b.n	8000aba <_malloc_r+0x22>
 8000b8a:	6025      	str	r5, [r4, #0]
 8000b8c:	e7dc      	b.n	8000b48 <_malloc_r+0xb0>
 8000b8e:	605b      	str	r3, [r3, #4]
 8000b90:	deff      	udf	#255	; 0xff
 8000b92:	bf00      	nop
 8000b94:	200001c0 	.word	0x200001c0

08000b98 <_printf_common>:
 8000b98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b9c:	4616      	mov	r6, r2
 8000b9e:	4699      	mov	r9, r3
 8000ba0:	688a      	ldr	r2, [r1, #8]
 8000ba2:	690b      	ldr	r3, [r1, #16]
 8000ba4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ba8:	4293      	cmp	r3, r2
 8000baa:	bfb8      	it	lt
 8000bac:	4613      	movlt	r3, r2
 8000bae:	6033      	str	r3, [r6, #0]
 8000bb0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000bb4:	4607      	mov	r7, r0
 8000bb6:	460c      	mov	r4, r1
 8000bb8:	b10a      	cbz	r2, 8000bbe <_printf_common+0x26>
 8000bba:	3301      	adds	r3, #1
 8000bbc:	6033      	str	r3, [r6, #0]
 8000bbe:	6823      	ldr	r3, [r4, #0]
 8000bc0:	0699      	lsls	r1, r3, #26
 8000bc2:	bf42      	ittt	mi
 8000bc4:	6833      	ldrmi	r3, [r6, #0]
 8000bc6:	3302      	addmi	r3, #2
 8000bc8:	6033      	strmi	r3, [r6, #0]
 8000bca:	6825      	ldr	r5, [r4, #0]
 8000bcc:	f015 0506 	ands.w	r5, r5, #6
 8000bd0:	d106      	bne.n	8000be0 <_printf_common+0x48>
 8000bd2:	f104 0a19 	add.w	sl, r4, #25
 8000bd6:	68e3      	ldr	r3, [r4, #12]
 8000bd8:	6832      	ldr	r2, [r6, #0]
 8000bda:	1a9b      	subs	r3, r3, r2
 8000bdc:	42ab      	cmp	r3, r5
 8000bde:	dc26      	bgt.n	8000c2e <_printf_common+0x96>
 8000be0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000be4:	1e13      	subs	r3, r2, #0
 8000be6:	6822      	ldr	r2, [r4, #0]
 8000be8:	bf18      	it	ne
 8000bea:	2301      	movne	r3, #1
 8000bec:	0692      	lsls	r2, r2, #26
 8000bee:	d42b      	bmi.n	8000c48 <_printf_common+0xb0>
 8000bf0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000bf4:	4649      	mov	r1, r9
 8000bf6:	4638      	mov	r0, r7
 8000bf8:	47c0      	blx	r8
 8000bfa:	3001      	adds	r0, #1
 8000bfc:	d01e      	beq.n	8000c3c <_printf_common+0xa4>
 8000bfe:	6823      	ldr	r3, [r4, #0]
 8000c00:	6922      	ldr	r2, [r4, #16]
 8000c02:	f003 0306 	and.w	r3, r3, #6
 8000c06:	2b04      	cmp	r3, #4
 8000c08:	bf02      	ittt	eq
 8000c0a:	68e5      	ldreq	r5, [r4, #12]
 8000c0c:	6833      	ldreq	r3, [r6, #0]
 8000c0e:	1aed      	subeq	r5, r5, r3
 8000c10:	68a3      	ldr	r3, [r4, #8]
 8000c12:	bf0c      	ite	eq
 8000c14:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c18:	2500      	movne	r5, #0
 8000c1a:	4293      	cmp	r3, r2
 8000c1c:	bfc4      	itt	gt
 8000c1e:	1a9b      	subgt	r3, r3, r2
 8000c20:	18ed      	addgt	r5, r5, r3
 8000c22:	2600      	movs	r6, #0
 8000c24:	341a      	adds	r4, #26
 8000c26:	42b5      	cmp	r5, r6
 8000c28:	d11a      	bne.n	8000c60 <_printf_common+0xc8>
 8000c2a:	2000      	movs	r0, #0
 8000c2c:	e008      	b.n	8000c40 <_printf_common+0xa8>
 8000c2e:	2301      	movs	r3, #1
 8000c30:	4652      	mov	r2, sl
 8000c32:	4649      	mov	r1, r9
 8000c34:	4638      	mov	r0, r7
 8000c36:	47c0      	blx	r8
 8000c38:	3001      	adds	r0, #1
 8000c3a:	d103      	bne.n	8000c44 <_printf_common+0xac>
 8000c3c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c44:	3501      	adds	r5, #1
 8000c46:	e7c6      	b.n	8000bd6 <_printf_common+0x3e>
 8000c48:	18e1      	adds	r1, r4, r3
 8000c4a:	1c5a      	adds	r2, r3, #1
 8000c4c:	2030      	movs	r0, #48	; 0x30
 8000c4e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c52:	4422      	add	r2, r4
 8000c54:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c58:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c5c:	3302      	adds	r3, #2
 8000c5e:	e7c7      	b.n	8000bf0 <_printf_common+0x58>
 8000c60:	2301      	movs	r3, #1
 8000c62:	4622      	mov	r2, r4
 8000c64:	4649      	mov	r1, r9
 8000c66:	4638      	mov	r0, r7
 8000c68:	47c0      	blx	r8
 8000c6a:	3001      	adds	r0, #1
 8000c6c:	d0e6      	beq.n	8000c3c <_printf_common+0xa4>
 8000c6e:	3601      	adds	r6, #1
 8000c70:	e7d9      	b.n	8000c26 <_printf_common+0x8e>
	...

08000c74 <_printf_i>:
 8000c74:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c78:	7e0f      	ldrb	r7, [r1, #24]
 8000c7a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000c7c:	2f78      	cmp	r7, #120	; 0x78
 8000c7e:	4691      	mov	r9, r2
 8000c80:	4680      	mov	r8, r0
 8000c82:	460c      	mov	r4, r1
 8000c84:	469a      	mov	sl, r3
 8000c86:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000c8a:	d807      	bhi.n	8000c9c <_printf_i+0x28>
 8000c8c:	2f62      	cmp	r7, #98	; 0x62
 8000c8e:	d80a      	bhi.n	8000ca6 <_printf_i+0x32>
 8000c90:	2f00      	cmp	r7, #0
 8000c92:	f000 80d4 	beq.w	8000e3e <_printf_i+0x1ca>
 8000c96:	2f58      	cmp	r7, #88	; 0x58
 8000c98:	f000 80c0 	beq.w	8000e1c <_printf_i+0x1a8>
 8000c9c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000ca0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000ca4:	e03a      	b.n	8000d1c <_printf_i+0xa8>
 8000ca6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000caa:	2b15      	cmp	r3, #21
 8000cac:	d8f6      	bhi.n	8000c9c <_printf_i+0x28>
 8000cae:	a101      	add	r1, pc, #4	; (adr r1, 8000cb4 <_printf_i+0x40>)
 8000cb0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000cb4:	08000d0d 	.word	0x08000d0d
 8000cb8:	08000d21 	.word	0x08000d21
 8000cbc:	08000c9d 	.word	0x08000c9d
 8000cc0:	08000c9d 	.word	0x08000c9d
 8000cc4:	08000c9d 	.word	0x08000c9d
 8000cc8:	08000c9d 	.word	0x08000c9d
 8000ccc:	08000d21 	.word	0x08000d21
 8000cd0:	08000c9d 	.word	0x08000c9d
 8000cd4:	08000c9d 	.word	0x08000c9d
 8000cd8:	08000c9d 	.word	0x08000c9d
 8000cdc:	08000c9d 	.word	0x08000c9d
 8000ce0:	08000e25 	.word	0x08000e25
 8000ce4:	08000d4d 	.word	0x08000d4d
 8000ce8:	08000ddf 	.word	0x08000ddf
 8000cec:	08000c9d 	.word	0x08000c9d
 8000cf0:	08000c9d 	.word	0x08000c9d
 8000cf4:	08000e47 	.word	0x08000e47
 8000cf8:	08000c9d 	.word	0x08000c9d
 8000cfc:	08000d4d 	.word	0x08000d4d
 8000d00:	08000c9d 	.word	0x08000c9d
 8000d04:	08000c9d 	.word	0x08000c9d
 8000d08:	08000de7 	.word	0x08000de7
 8000d0c:	682b      	ldr	r3, [r5, #0]
 8000d0e:	1d1a      	adds	r2, r3, #4
 8000d10:	681b      	ldr	r3, [r3, #0]
 8000d12:	602a      	str	r2, [r5, #0]
 8000d14:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d18:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d1c:	2301      	movs	r3, #1
 8000d1e:	e09f      	b.n	8000e60 <_printf_i+0x1ec>
 8000d20:	6820      	ldr	r0, [r4, #0]
 8000d22:	682b      	ldr	r3, [r5, #0]
 8000d24:	0607      	lsls	r7, r0, #24
 8000d26:	f103 0104 	add.w	r1, r3, #4
 8000d2a:	6029      	str	r1, [r5, #0]
 8000d2c:	d501      	bpl.n	8000d32 <_printf_i+0xbe>
 8000d2e:	681e      	ldr	r6, [r3, #0]
 8000d30:	e003      	b.n	8000d3a <_printf_i+0xc6>
 8000d32:	0646      	lsls	r6, r0, #25
 8000d34:	d5fb      	bpl.n	8000d2e <_printf_i+0xba>
 8000d36:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000d3a:	2e00      	cmp	r6, #0
 8000d3c:	da03      	bge.n	8000d46 <_printf_i+0xd2>
 8000d3e:	232d      	movs	r3, #45	; 0x2d
 8000d40:	4276      	negs	r6, r6
 8000d42:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d46:	485a      	ldr	r0, [pc, #360]	; (8000eb0 <_printf_i+0x23c>)
 8000d48:	230a      	movs	r3, #10
 8000d4a:	e012      	b.n	8000d72 <_printf_i+0xfe>
 8000d4c:	682b      	ldr	r3, [r5, #0]
 8000d4e:	6820      	ldr	r0, [r4, #0]
 8000d50:	1d19      	adds	r1, r3, #4
 8000d52:	6029      	str	r1, [r5, #0]
 8000d54:	0605      	lsls	r5, r0, #24
 8000d56:	d501      	bpl.n	8000d5c <_printf_i+0xe8>
 8000d58:	681e      	ldr	r6, [r3, #0]
 8000d5a:	e002      	b.n	8000d62 <_printf_i+0xee>
 8000d5c:	0641      	lsls	r1, r0, #25
 8000d5e:	d5fb      	bpl.n	8000d58 <_printf_i+0xe4>
 8000d60:	881e      	ldrh	r6, [r3, #0]
 8000d62:	4853      	ldr	r0, [pc, #332]	; (8000eb0 <_printf_i+0x23c>)
 8000d64:	2f6f      	cmp	r7, #111	; 0x6f
 8000d66:	bf0c      	ite	eq
 8000d68:	2308      	moveq	r3, #8
 8000d6a:	230a      	movne	r3, #10
 8000d6c:	2100      	movs	r1, #0
 8000d6e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d72:	6865      	ldr	r5, [r4, #4]
 8000d74:	60a5      	str	r5, [r4, #8]
 8000d76:	2d00      	cmp	r5, #0
 8000d78:	bfa2      	ittt	ge
 8000d7a:	6821      	ldrge	r1, [r4, #0]
 8000d7c:	f021 0104 	bicge.w	r1, r1, #4
 8000d80:	6021      	strge	r1, [r4, #0]
 8000d82:	b90e      	cbnz	r6, 8000d88 <_printf_i+0x114>
 8000d84:	2d00      	cmp	r5, #0
 8000d86:	d04b      	beq.n	8000e20 <_printf_i+0x1ac>
 8000d88:	4615      	mov	r5, r2
 8000d8a:	fbb6 f1f3 	udiv	r1, r6, r3
 8000d8e:	fb03 6711 	mls	r7, r3, r1, r6
 8000d92:	5dc7      	ldrb	r7, [r0, r7]
 8000d94:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000d98:	4637      	mov	r7, r6
 8000d9a:	42bb      	cmp	r3, r7
 8000d9c:	460e      	mov	r6, r1
 8000d9e:	d9f4      	bls.n	8000d8a <_printf_i+0x116>
 8000da0:	2b08      	cmp	r3, #8
 8000da2:	d10b      	bne.n	8000dbc <_printf_i+0x148>
 8000da4:	6823      	ldr	r3, [r4, #0]
 8000da6:	07de      	lsls	r6, r3, #31
 8000da8:	d508      	bpl.n	8000dbc <_printf_i+0x148>
 8000daa:	6923      	ldr	r3, [r4, #16]
 8000dac:	6861      	ldr	r1, [r4, #4]
 8000dae:	4299      	cmp	r1, r3
 8000db0:	bfde      	ittt	le
 8000db2:	2330      	movle	r3, #48	; 0x30
 8000db4:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000db8:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000dbc:	1b52      	subs	r2, r2, r5
 8000dbe:	6122      	str	r2, [r4, #16]
 8000dc0:	f8cd a000 	str.w	sl, [sp]
 8000dc4:	464b      	mov	r3, r9
 8000dc6:	aa03      	add	r2, sp, #12
 8000dc8:	4621      	mov	r1, r4
 8000dca:	4640      	mov	r0, r8
 8000dcc:	f7ff fee4 	bl	8000b98 <_printf_common>
 8000dd0:	3001      	adds	r0, #1
 8000dd2:	d14a      	bne.n	8000e6a <_printf_i+0x1f6>
 8000dd4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000dd8:	b004      	add	sp, #16
 8000dda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dde:	6823      	ldr	r3, [r4, #0]
 8000de0:	f043 0320 	orr.w	r3, r3, #32
 8000de4:	6023      	str	r3, [r4, #0]
 8000de6:	4833      	ldr	r0, [pc, #204]	; (8000eb4 <_printf_i+0x240>)
 8000de8:	2778      	movs	r7, #120	; 0x78
 8000dea:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000dee:	6823      	ldr	r3, [r4, #0]
 8000df0:	6829      	ldr	r1, [r5, #0]
 8000df2:	061f      	lsls	r7, r3, #24
 8000df4:	f851 6b04 	ldr.w	r6, [r1], #4
 8000df8:	d402      	bmi.n	8000e00 <_printf_i+0x18c>
 8000dfa:	065f      	lsls	r7, r3, #25
 8000dfc:	bf48      	it	mi
 8000dfe:	b2b6      	uxthmi	r6, r6
 8000e00:	07df      	lsls	r7, r3, #31
 8000e02:	bf48      	it	mi
 8000e04:	f043 0320 	orrmi.w	r3, r3, #32
 8000e08:	6029      	str	r1, [r5, #0]
 8000e0a:	bf48      	it	mi
 8000e0c:	6023      	strmi	r3, [r4, #0]
 8000e0e:	b91e      	cbnz	r6, 8000e18 <_printf_i+0x1a4>
 8000e10:	6823      	ldr	r3, [r4, #0]
 8000e12:	f023 0320 	bic.w	r3, r3, #32
 8000e16:	6023      	str	r3, [r4, #0]
 8000e18:	2310      	movs	r3, #16
 8000e1a:	e7a7      	b.n	8000d6c <_printf_i+0xf8>
 8000e1c:	4824      	ldr	r0, [pc, #144]	; (8000eb0 <_printf_i+0x23c>)
 8000e1e:	e7e4      	b.n	8000dea <_printf_i+0x176>
 8000e20:	4615      	mov	r5, r2
 8000e22:	e7bd      	b.n	8000da0 <_printf_i+0x12c>
 8000e24:	682b      	ldr	r3, [r5, #0]
 8000e26:	6826      	ldr	r6, [r4, #0]
 8000e28:	6961      	ldr	r1, [r4, #20]
 8000e2a:	1d18      	adds	r0, r3, #4
 8000e2c:	6028      	str	r0, [r5, #0]
 8000e2e:	0635      	lsls	r5, r6, #24
 8000e30:	681b      	ldr	r3, [r3, #0]
 8000e32:	d501      	bpl.n	8000e38 <_printf_i+0x1c4>
 8000e34:	6019      	str	r1, [r3, #0]
 8000e36:	e002      	b.n	8000e3e <_printf_i+0x1ca>
 8000e38:	0670      	lsls	r0, r6, #25
 8000e3a:	d5fb      	bpl.n	8000e34 <_printf_i+0x1c0>
 8000e3c:	8019      	strh	r1, [r3, #0]
 8000e3e:	2300      	movs	r3, #0
 8000e40:	6123      	str	r3, [r4, #16]
 8000e42:	4615      	mov	r5, r2
 8000e44:	e7bc      	b.n	8000dc0 <_printf_i+0x14c>
 8000e46:	682b      	ldr	r3, [r5, #0]
 8000e48:	1d1a      	adds	r2, r3, #4
 8000e4a:	602a      	str	r2, [r5, #0]
 8000e4c:	681d      	ldr	r5, [r3, #0]
 8000e4e:	6862      	ldr	r2, [r4, #4]
 8000e50:	2100      	movs	r1, #0
 8000e52:	4628      	mov	r0, r5
 8000e54:	f7ff f9c4 	bl	80001e0 <memchr>
 8000e58:	b108      	cbz	r0, 8000e5e <_printf_i+0x1ea>
 8000e5a:	1b40      	subs	r0, r0, r5
 8000e5c:	6060      	str	r0, [r4, #4]
 8000e5e:	6863      	ldr	r3, [r4, #4]
 8000e60:	6123      	str	r3, [r4, #16]
 8000e62:	2300      	movs	r3, #0
 8000e64:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e68:	e7aa      	b.n	8000dc0 <_printf_i+0x14c>
 8000e6a:	6923      	ldr	r3, [r4, #16]
 8000e6c:	462a      	mov	r2, r5
 8000e6e:	4649      	mov	r1, r9
 8000e70:	4640      	mov	r0, r8
 8000e72:	47d0      	blx	sl
 8000e74:	3001      	adds	r0, #1
 8000e76:	d0ad      	beq.n	8000dd4 <_printf_i+0x160>
 8000e78:	6823      	ldr	r3, [r4, #0]
 8000e7a:	079b      	lsls	r3, r3, #30
 8000e7c:	d413      	bmi.n	8000ea6 <_printf_i+0x232>
 8000e7e:	68e0      	ldr	r0, [r4, #12]
 8000e80:	9b03      	ldr	r3, [sp, #12]
 8000e82:	4298      	cmp	r0, r3
 8000e84:	bfb8      	it	lt
 8000e86:	4618      	movlt	r0, r3
 8000e88:	e7a6      	b.n	8000dd8 <_printf_i+0x164>
 8000e8a:	2301      	movs	r3, #1
 8000e8c:	4632      	mov	r2, r6
 8000e8e:	4649      	mov	r1, r9
 8000e90:	4640      	mov	r0, r8
 8000e92:	47d0      	blx	sl
 8000e94:	3001      	adds	r0, #1
 8000e96:	d09d      	beq.n	8000dd4 <_printf_i+0x160>
 8000e98:	3501      	adds	r5, #1
 8000e9a:	68e3      	ldr	r3, [r4, #12]
 8000e9c:	9903      	ldr	r1, [sp, #12]
 8000e9e:	1a5b      	subs	r3, r3, r1
 8000ea0:	42ab      	cmp	r3, r5
 8000ea2:	dcf2      	bgt.n	8000e8a <_printf_i+0x216>
 8000ea4:	e7eb      	b.n	8000e7e <_printf_i+0x20a>
 8000ea6:	2500      	movs	r5, #0
 8000ea8:	f104 0619 	add.w	r6, r4, #25
 8000eac:	e7f5      	b.n	8000e9a <_printf_i+0x226>
 8000eae:	bf00      	nop
 8000eb0:	08001465 	.word	0x08001465
 8000eb4:	08001476 	.word	0x08001476

08000eb8 <__sflush_r>:
 8000eb8:	898a      	ldrh	r2, [r1, #12]
 8000eba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ebe:	4605      	mov	r5, r0
 8000ec0:	0710      	lsls	r0, r2, #28
 8000ec2:	460c      	mov	r4, r1
 8000ec4:	d458      	bmi.n	8000f78 <__sflush_r+0xc0>
 8000ec6:	684b      	ldr	r3, [r1, #4]
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	dc05      	bgt.n	8000ed8 <__sflush_r+0x20>
 8000ecc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000ece:	2b00      	cmp	r3, #0
 8000ed0:	dc02      	bgt.n	8000ed8 <__sflush_r+0x20>
 8000ed2:	2000      	movs	r0, #0
 8000ed4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ed8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000eda:	2e00      	cmp	r6, #0
 8000edc:	d0f9      	beq.n	8000ed2 <__sflush_r+0x1a>
 8000ede:	2300      	movs	r3, #0
 8000ee0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000ee4:	682f      	ldr	r7, [r5, #0]
 8000ee6:	6a21      	ldr	r1, [r4, #32]
 8000ee8:	602b      	str	r3, [r5, #0]
 8000eea:	d032      	beq.n	8000f52 <__sflush_r+0x9a>
 8000eec:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000eee:	89a3      	ldrh	r3, [r4, #12]
 8000ef0:	075a      	lsls	r2, r3, #29
 8000ef2:	d505      	bpl.n	8000f00 <__sflush_r+0x48>
 8000ef4:	6863      	ldr	r3, [r4, #4]
 8000ef6:	1ac0      	subs	r0, r0, r3
 8000ef8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000efa:	b10b      	cbz	r3, 8000f00 <__sflush_r+0x48>
 8000efc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000efe:	1ac0      	subs	r0, r0, r3
 8000f00:	2300      	movs	r3, #0
 8000f02:	4602      	mov	r2, r0
 8000f04:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f06:	6a21      	ldr	r1, [r4, #32]
 8000f08:	4628      	mov	r0, r5
 8000f0a:	47b0      	blx	r6
 8000f0c:	1c43      	adds	r3, r0, #1
 8000f0e:	89a3      	ldrh	r3, [r4, #12]
 8000f10:	d106      	bne.n	8000f20 <__sflush_r+0x68>
 8000f12:	6829      	ldr	r1, [r5, #0]
 8000f14:	291d      	cmp	r1, #29
 8000f16:	d82b      	bhi.n	8000f70 <__sflush_r+0xb8>
 8000f18:	4a29      	ldr	r2, [pc, #164]	; (8000fc0 <__sflush_r+0x108>)
 8000f1a:	410a      	asrs	r2, r1
 8000f1c:	07d6      	lsls	r6, r2, #31
 8000f1e:	d427      	bmi.n	8000f70 <__sflush_r+0xb8>
 8000f20:	2200      	movs	r2, #0
 8000f22:	6062      	str	r2, [r4, #4]
 8000f24:	04d9      	lsls	r1, r3, #19
 8000f26:	6922      	ldr	r2, [r4, #16]
 8000f28:	6022      	str	r2, [r4, #0]
 8000f2a:	d504      	bpl.n	8000f36 <__sflush_r+0x7e>
 8000f2c:	1c42      	adds	r2, r0, #1
 8000f2e:	d101      	bne.n	8000f34 <__sflush_r+0x7c>
 8000f30:	682b      	ldr	r3, [r5, #0]
 8000f32:	b903      	cbnz	r3, 8000f36 <__sflush_r+0x7e>
 8000f34:	6560      	str	r0, [r4, #84]	; 0x54
 8000f36:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f38:	602f      	str	r7, [r5, #0]
 8000f3a:	2900      	cmp	r1, #0
 8000f3c:	d0c9      	beq.n	8000ed2 <__sflush_r+0x1a>
 8000f3e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f42:	4299      	cmp	r1, r3
 8000f44:	d002      	beq.n	8000f4c <__sflush_r+0x94>
 8000f46:	4628      	mov	r0, r5
 8000f48:	f000 fa22 	bl	8001390 <_free_r>
 8000f4c:	2000      	movs	r0, #0
 8000f4e:	6360      	str	r0, [r4, #52]	; 0x34
 8000f50:	e7c0      	b.n	8000ed4 <__sflush_r+0x1c>
 8000f52:	2301      	movs	r3, #1
 8000f54:	4628      	mov	r0, r5
 8000f56:	47b0      	blx	r6
 8000f58:	1c41      	adds	r1, r0, #1
 8000f5a:	d1c8      	bne.n	8000eee <__sflush_r+0x36>
 8000f5c:	682b      	ldr	r3, [r5, #0]
 8000f5e:	2b00      	cmp	r3, #0
 8000f60:	d0c5      	beq.n	8000eee <__sflush_r+0x36>
 8000f62:	2b1d      	cmp	r3, #29
 8000f64:	d001      	beq.n	8000f6a <__sflush_r+0xb2>
 8000f66:	2b16      	cmp	r3, #22
 8000f68:	d101      	bne.n	8000f6e <__sflush_r+0xb6>
 8000f6a:	602f      	str	r7, [r5, #0]
 8000f6c:	e7b1      	b.n	8000ed2 <__sflush_r+0x1a>
 8000f6e:	89a3      	ldrh	r3, [r4, #12]
 8000f70:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f74:	81a3      	strh	r3, [r4, #12]
 8000f76:	e7ad      	b.n	8000ed4 <__sflush_r+0x1c>
 8000f78:	690f      	ldr	r7, [r1, #16]
 8000f7a:	2f00      	cmp	r7, #0
 8000f7c:	d0a9      	beq.n	8000ed2 <__sflush_r+0x1a>
 8000f7e:	0793      	lsls	r3, r2, #30
 8000f80:	680e      	ldr	r6, [r1, #0]
 8000f82:	bf08      	it	eq
 8000f84:	694b      	ldreq	r3, [r1, #20]
 8000f86:	600f      	str	r7, [r1, #0]
 8000f88:	bf18      	it	ne
 8000f8a:	2300      	movne	r3, #0
 8000f8c:	eba6 0807 	sub.w	r8, r6, r7
 8000f90:	608b      	str	r3, [r1, #8]
 8000f92:	f1b8 0f00 	cmp.w	r8, #0
 8000f96:	dd9c      	ble.n	8000ed2 <__sflush_r+0x1a>
 8000f98:	6a21      	ldr	r1, [r4, #32]
 8000f9a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000f9c:	4643      	mov	r3, r8
 8000f9e:	463a      	mov	r2, r7
 8000fa0:	4628      	mov	r0, r5
 8000fa2:	47b0      	blx	r6
 8000fa4:	2800      	cmp	r0, #0
 8000fa6:	dc06      	bgt.n	8000fb6 <__sflush_r+0xfe>
 8000fa8:	89a3      	ldrh	r3, [r4, #12]
 8000faa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fae:	81a3      	strh	r3, [r4, #12]
 8000fb0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000fb4:	e78e      	b.n	8000ed4 <__sflush_r+0x1c>
 8000fb6:	4407      	add	r7, r0
 8000fb8:	eba8 0800 	sub.w	r8, r8, r0
 8000fbc:	e7e9      	b.n	8000f92 <__sflush_r+0xda>
 8000fbe:	bf00      	nop
 8000fc0:	dfbffffe 	.word	0xdfbffffe

08000fc4 <_fflush_r>:
 8000fc4:	b538      	push	{r3, r4, r5, lr}
 8000fc6:	690b      	ldr	r3, [r1, #16]
 8000fc8:	4605      	mov	r5, r0
 8000fca:	460c      	mov	r4, r1
 8000fcc:	b913      	cbnz	r3, 8000fd4 <_fflush_r+0x10>
 8000fce:	2500      	movs	r5, #0
 8000fd0:	4628      	mov	r0, r5
 8000fd2:	bd38      	pop	{r3, r4, r5, pc}
 8000fd4:	b118      	cbz	r0, 8000fde <_fflush_r+0x1a>
 8000fd6:	6a03      	ldr	r3, [r0, #32]
 8000fd8:	b90b      	cbnz	r3, 8000fde <_fflush_r+0x1a>
 8000fda:	f7ff fb7d 	bl	80006d8 <__sinit>
 8000fde:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fe2:	2b00      	cmp	r3, #0
 8000fe4:	d0f3      	beq.n	8000fce <_fflush_r+0xa>
 8000fe6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000fe8:	07d0      	lsls	r0, r2, #31
 8000fea:	d404      	bmi.n	8000ff6 <_fflush_r+0x32>
 8000fec:	0599      	lsls	r1, r3, #22
 8000fee:	d402      	bmi.n	8000ff6 <_fflush_r+0x32>
 8000ff0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000ff2:	f7ff fbec 	bl	80007ce <__retarget_lock_acquire_recursive>
 8000ff6:	4628      	mov	r0, r5
 8000ff8:	4621      	mov	r1, r4
 8000ffa:	f7ff ff5d 	bl	8000eb8 <__sflush_r>
 8000ffe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001000:	07da      	lsls	r2, r3, #31
 8001002:	4605      	mov	r5, r0
 8001004:	d4e4      	bmi.n	8000fd0 <_fflush_r+0xc>
 8001006:	89a3      	ldrh	r3, [r4, #12]
 8001008:	059b      	lsls	r3, r3, #22
 800100a:	d4e1      	bmi.n	8000fd0 <_fflush_r+0xc>
 800100c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800100e:	f7ff fbdf 	bl	80007d0 <__retarget_lock_release_recursive>
 8001012:	e7dd      	b.n	8000fd0 <_fflush_r+0xc>

08001014 <__malloc_lock>:
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <__malloc_lock+0x8>)
 8001016:	f7ff bbda 	b.w	80007ce <__retarget_lock_acquire_recursive>
 800101a:	bf00      	nop
 800101c:	200001bc 	.word	0x200001bc

08001020 <__malloc_unlock>:
 8001020:	4801      	ldr	r0, [pc, #4]	; (8001028 <__malloc_unlock+0x8>)
 8001022:	f7ff bbd5 	b.w	80007d0 <__retarget_lock_release_recursive>
 8001026:	bf00      	nop
 8001028:	200001bc 	.word	0x200001bc

0800102c <__sread>:
 800102c:	b510      	push	{r4, lr}
 800102e:	460c      	mov	r4, r1
 8001030:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001034:	f000 f978 	bl	8001328 <_read_r>
 8001038:	2800      	cmp	r0, #0
 800103a:	bfab      	itete	ge
 800103c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800103e:	89a3      	ldrhlt	r3, [r4, #12]
 8001040:	181b      	addge	r3, r3, r0
 8001042:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001046:	bfac      	ite	ge
 8001048:	6563      	strge	r3, [r4, #84]	; 0x54
 800104a:	81a3      	strhlt	r3, [r4, #12]
 800104c:	bd10      	pop	{r4, pc}

0800104e <__swrite>:
 800104e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001052:	461f      	mov	r7, r3
 8001054:	898b      	ldrh	r3, [r1, #12]
 8001056:	05db      	lsls	r3, r3, #23
 8001058:	4605      	mov	r5, r0
 800105a:	460c      	mov	r4, r1
 800105c:	4616      	mov	r6, r2
 800105e:	d505      	bpl.n	800106c <__swrite+0x1e>
 8001060:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001064:	2302      	movs	r3, #2
 8001066:	2200      	movs	r2, #0
 8001068:	f000 f94c 	bl	8001304 <_lseek_r>
 800106c:	89a3      	ldrh	r3, [r4, #12]
 800106e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001072:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001076:	81a3      	strh	r3, [r4, #12]
 8001078:	4632      	mov	r2, r6
 800107a:	463b      	mov	r3, r7
 800107c:	4628      	mov	r0, r5
 800107e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001082:	f000 b973 	b.w	800136c <_write_r>

08001086 <__sseek>:
 8001086:	b510      	push	{r4, lr}
 8001088:	460c      	mov	r4, r1
 800108a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800108e:	f000 f939 	bl	8001304 <_lseek_r>
 8001092:	1c43      	adds	r3, r0, #1
 8001094:	89a3      	ldrh	r3, [r4, #12]
 8001096:	bf15      	itete	ne
 8001098:	6560      	strne	r0, [r4, #84]	; 0x54
 800109a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800109e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80010a2:	81a3      	strheq	r3, [r4, #12]
 80010a4:	bf18      	it	ne
 80010a6:	81a3      	strhne	r3, [r4, #12]
 80010a8:	bd10      	pop	{r4, pc}

080010aa <__sclose>:
 80010aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010ae:	f000 b8f7 	b.w	80012a0 <_close_r>

080010b2 <__swbuf_r>:
 80010b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010b4:	460e      	mov	r6, r1
 80010b6:	4614      	mov	r4, r2
 80010b8:	4605      	mov	r5, r0
 80010ba:	b118      	cbz	r0, 80010c4 <__swbuf_r+0x12>
 80010bc:	6a03      	ldr	r3, [r0, #32]
 80010be:	b90b      	cbnz	r3, 80010c4 <__swbuf_r+0x12>
 80010c0:	f7ff fb0a 	bl	80006d8 <__sinit>
 80010c4:	69a3      	ldr	r3, [r4, #24]
 80010c6:	60a3      	str	r3, [r4, #8]
 80010c8:	89a3      	ldrh	r3, [r4, #12]
 80010ca:	071a      	lsls	r2, r3, #28
 80010cc:	d525      	bpl.n	800111a <__swbuf_r+0x68>
 80010ce:	6923      	ldr	r3, [r4, #16]
 80010d0:	b31b      	cbz	r3, 800111a <__swbuf_r+0x68>
 80010d2:	6823      	ldr	r3, [r4, #0]
 80010d4:	6922      	ldr	r2, [r4, #16]
 80010d6:	1a98      	subs	r0, r3, r2
 80010d8:	6963      	ldr	r3, [r4, #20]
 80010da:	b2f6      	uxtb	r6, r6
 80010dc:	4283      	cmp	r3, r0
 80010de:	4637      	mov	r7, r6
 80010e0:	dc04      	bgt.n	80010ec <__swbuf_r+0x3a>
 80010e2:	4621      	mov	r1, r4
 80010e4:	4628      	mov	r0, r5
 80010e6:	f7ff ff6d 	bl	8000fc4 <_fflush_r>
 80010ea:	b9e0      	cbnz	r0, 8001126 <__swbuf_r+0x74>
 80010ec:	68a3      	ldr	r3, [r4, #8]
 80010ee:	3b01      	subs	r3, #1
 80010f0:	60a3      	str	r3, [r4, #8]
 80010f2:	6823      	ldr	r3, [r4, #0]
 80010f4:	1c5a      	adds	r2, r3, #1
 80010f6:	6022      	str	r2, [r4, #0]
 80010f8:	701e      	strb	r6, [r3, #0]
 80010fa:	6962      	ldr	r2, [r4, #20]
 80010fc:	1c43      	adds	r3, r0, #1
 80010fe:	429a      	cmp	r2, r3
 8001100:	d004      	beq.n	800110c <__swbuf_r+0x5a>
 8001102:	89a3      	ldrh	r3, [r4, #12]
 8001104:	07db      	lsls	r3, r3, #31
 8001106:	d506      	bpl.n	8001116 <__swbuf_r+0x64>
 8001108:	2e0a      	cmp	r6, #10
 800110a:	d104      	bne.n	8001116 <__swbuf_r+0x64>
 800110c:	4621      	mov	r1, r4
 800110e:	4628      	mov	r0, r5
 8001110:	f7ff ff58 	bl	8000fc4 <_fflush_r>
 8001114:	b938      	cbnz	r0, 8001126 <__swbuf_r+0x74>
 8001116:	4638      	mov	r0, r7
 8001118:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800111a:	4621      	mov	r1, r4
 800111c:	4628      	mov	r0, r5
 800111e:	f000 f805 	bl	800112c <__swsetup_r>
 8001122:	2800      	cmp	r0, #0
 8001124:	d0d5      	beq.n	80010d2 <__swbuf_r+0x20>
 8001126:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800112a:	e7f4      	b.n	8001116 <__swbuf_r+0x64>

0800112c <__swsetup_r>:
 800112c:	b538      	push	{r3, r4, r5, lr}
 800112e:	4b2a      	ldr	r3, [pc, #168]	; (80011d8 <__swsetup_r+0xac>)
 8001130:	4605      	mov	r5, r0
 8001132:	6818      	ldr	r0, [r3, #0]
 8001134:	460c      	mov	r4, r1
 8001136:	b118      	cbz	r0, 8001140 <__swsetup_r+0x14>
 8001138:	6a03      	ldr	r3, [r0, #32]
 800113a:	b90b      	cbnz	r3, 8001140 <__swsetup_r+0x14>
 800113c:	f7ff facc 	bl	80006d8 <__sinit>
 8001140:	89a3      	ldrh	r3, [r4, #12]
 8001142:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001146:	0718      	lsls	r0, r3, #28
 8001148:	d422      	bmi.n	8001190 <__swsetup_r+0x64>
 800114a:	06d9      	lsls	r1, r3, #27
 800114c:	d407      	bmi.n	800115e <__swsetup_r+0x32>
 800114e:	2309      	movs	r3, #9
 8001150:	602b      	str	r3, [r5, #0]
 8001152:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001156:	81a3      	strh	r3, [r4, #12]
 8001158:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800115c:	e034      	b.n	80011c8 <__swsetup_r+0x9c>
 800115e:	0758      	lsls	r0, r3, #29
 8001160:	d512      	bpl.n	8001188 <__swsetup_r+0x5c>
 8001162:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001164:	b141      	cbz	r1, 8001178 <__swsetup_r+0x4c>
 8001166:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800116a:	4299      	cmp	r1, r3
 800116c:	d002      	beq.n	8001174 <__swsetup_r+0x48>
 800116e:	4628      	mov	r0, r5
 8001170:	f000 f90e 	bl	8001390 <_free_r>
 8001174:	2300      	movs	r3, #0
 8001176:	6363      	str	r3, [r4, #52]	; 0x34
 8001178:	89a3      	ldrh	r3, [r4, #12]
 800117a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800117e:	81a3      	strh	r3, [r4, #12]
 8001180:	2300      	movs	r3, #0
 8001182:	6063      	str	r3, [r4, #4]
 8001184:	6923      	ldr	r3, [r4, #16]
 8001186:	6023      	str	r3, [r4, #0]
 8001188:	89a3      	ldrh	r3, [r4, #12]
 800118a:	f043 0308 	orr.w	r3, r3, #8
 800118e:	81a3      	strh	r3, [r4, #12]
 8001190:	6923      	ldr	r3, [r4, #16]
 8001192:	b94b      	cbnz	r3, 80011a8 <__swsetup_r+0x7c>
 8001194:	89a3      	ldrh	r3, [r4, #12]
 8001196:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800119a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800119e:	d003      	beq.n	80011a8 <__swsetup_r+0x7c>
 80011a0:	4621      	mov	r1, r4
 80011a2:	4628      	mov	r0, r5
 80011a4:	f000 f840 	bl	8001228 <__smakebuf_r>
 80011a8:	89a0      	ldrh	r0, [r4, #12]
 80011aa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011ae:	f010 0301 	ands.w	r3, r0, #1
 80011b2:	d00a      	beq.n	80011ca <__swsetup_r+0x9e>
 80011b4:	2300      	movs	r3, #0
 80011b6:	60a3      	str	r3, [r4, #8]
 80011b8:	6963      	ldr	r3, [r4, #20]
 80011ba:	425b      	negs	r3, r3
 80011bc:	61a3      	str	r3, [r4, #24]
 80011be:	6923      	ldr	r3, [r4, #16]
 80011c0:	b943      	cbnz	r3, 80011d4 <__swsetup_r+0xa8>
 80011c2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011c6:	d1c4      	bne.n	8001152 <__swsetup_r+0x26>
 80011c8:	bd38      	pop	{r3, r4, r5, pc}
 80011ca:	0781      	lsls	r1, r0, #30
 80011cc:	bf58      	it	pl
 80011ce:	6963      	ldrpl	r3, [r4, #20]
 80011d0:	60a3      	str	r3, [r4, #8]
 80011d2:	e7f4      	b.n	80011be <__swsetup_r+0x92>
 80011d4:	2000      	movs	r0, #0
 80011d6:	e7f7      	b.n	80011c8 <__swsetup_r+0x9c>
 80011d8:	20000058 	.word	0x20000058

080011dc <__swhatbuf_r>:
 80011dc:	b570      	push	{r4, r5, r6, lr}
 80011de:	460c      	mov	r4, r1
 80011e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011e4:	2900      	cmp	r1, #0
 80011e6:	b096      	sub	sp, #88	; 0x58
 80011e8:	4615      	mov	r5, r2
 80011ea:	461e      	mov	r6, r3
 80011ec:	da0d      	bge.n	800120a <__swhatbuf_r+0x2e>
 80011ee:	89a3      	ldrh	r3, [r4, #12]
 80011f0:	f013 0f80 	tst.w	r3, #128	; 0x80
 80011f4:	f04f 0100 	mov.w	r1, #0
 80011f8:	bf0c      	ite	eq
 80011fa:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80011fe:	2340      	movne	r3, #64	; 0x40
 8001200:	2000      	movs	r0, #0
 8001202:	6031      	str	r1, [r6, #0]
 8001204:	602b      	str	r3, [r5, #0]
 8001206:	b016      	add	sp, #88	; 0x58
 8001208:	bd70      	pop	{r4, r5, r6, pc}
 800120a:	466a      	mov	r2, sp
 800120c:	f000 f858 	bl	80012c0 <_fstat_r>
 8001210:	2800      	cmp	r0, #0
 8001212:	dbec      	blt.n	80011ee <__swhatbuf_r+0x12>
 8001214:	9901      	ldr	r1, [sp, #4]
 8001216:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800121a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800121e:	4259      	negs	r1, r3
 8001220:	4159      	adcs	r1, r3
 8001222:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001226:	e7eb      	b.n	8001200 <__swhatbuf_r+0x24>

08001228 <__smakebuf_r>:
 8001228:	898b      	ldrh	r3, [r1, #12]
 800122a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800122c:	079d      	lsls	r5, r3, #30
 800122e:	4606      	mov	r6, r0
 8001230:	460c      	mov	r4, r1
 8001232:	d507      	bpl.n	8001244 <__smakebuf_r+0x1c>
 8001234:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001238:	6023      	str	r3, [r4, #0]
 800123a:	6123      	str	r3, [r4, #16]
 800123c:	2301      	movs	r3, #1
 800123e:	6163      	str	r3, [r4, #20]
 8001240:	b002      	add	sp, #8
 8001242:	bd70      	pop	{r4, r5, r6, pc}
 8001244:	ab01      	add	r3, sp, #4
 8001246:	466a      	mov	r2, sp
 8001248:	f7ff ffc8 	bl	80011dc <__swhatbuf_r>
 800124c:	9900      	ldr	r1, [sp, #0]
 800124e:	4605      	mov	r5, r0
 8001250:	4630      	mov	r0, r6
 8001252:	f7ff fc21 	bl	8000a98 <_malloc_r>
 8001256:	b948      	cbnz	r0, 800126c <__smakebuf_r+0x44>
 8001258:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800125c:	059a      	lsls	r2, r3, #22
 800125e:	d4ef      	bmi.n	8001240 <__smakebuf_r+0x18>
 8001260:	f023 0303 	bic.w	r3, r3, #3
 8001264:	f043 0302 	orr.w	r3, r3, #2
 8001268:	81a3      	strh	r3, [r4, #12]
 800126a:	e7e3      	b.n	8001234 <__smakebuf_r+0xc>
 800126c:	89a3      	ldrh	r3, [r4, #12]
 800126e:	6020      	str	r0, [r4, #0]
 8001270:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001274:	81a3      	strh	r3, [r4, #12]
 8001276:	9b00      	ldr	r3, [sp, #0]
 8001278:	6163      	str	r3, [r4, #20]
 800127a:	9b01      	ldr	r3, [sp, #4]
 800127c:	6120      	str	r0, [r4, #16]
 800127e:	b15b      	cbz	r3, 8001298 <__smakebuf_r+0x70>
 8001280:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001284:	4630      	mov	r0, r6
 8001286:	f000 f82d 	bl	80012e4 <_isatty_r>
 800128a:	b128      	cbz	r0, 8001298 <__smakebuf_r+0x70>
 800128c:	89a3      	ldrh	r3, [r4, #12]
 800128e:	f023 0303 	bic.w	r3, r3, #3
 8001292:	f043 0301 	orr.w	r3, r3, #1
 8001296:	81a3      	strh	r3, [r4, #12]
 8001298:	89a3      	ldrh	r3, [r4, #12]
 800129a:	431d      	orrs	r5, r3
 800129c:	81a5      	strh	r5, [r4, #12]
 800129e:	e7cf      	b.n	8001240 <__smakebuf_r+0x18>

080012a0 <_close_r>:
 80012a0:	b538      	push	{r3, r4, r5, lr}
 80012a2:	4d06      	ldr	r5, [pc, #24]	; (80012bc <_close_r+0x1c>)
 80012a4:	2300      	movs	r3, #0
 80012a6:	4604      	mov	r4, r0
 80012a8:	4608      	mov	r0, r1
 80012aa:	602b      	str	r3, [r5, #0]
 80012ac:	f7ff f8f3 	bl	8000496 <_close>
 80012b0:	1c43      	adds	r3, r0, #1
 80012b2:	d102      	bne.n	80012ba <_close_r+0x1a>
 80012b4:	682b      	ldr	r3, [r5, #0]
 80012b6:	b103      	cbz	r3, 80012ba <_close_r+0x1a>
 80012b8:	6023      	str	r3, [r4, #0]
 80012ba:	bd38      	pop	{r3, r4, r5, pc}
 80012bc:	200001c8 	.word	0x200001c8

080012c0 <_fstat_r>:
 80012c0:	b538      	push	{r3, r4, r5, lr}
 80012c2:	4d07      	ldr	r5, [pc, #28]	; (80012e0 <_fstat_r+0x20>)
 80012c4:	2300      	movs	r3, #0
 80012c6:	4604      	mov	r4, r0
 80012c8:	4608      	mov	r0, r1
 80012ca:	4611      	mov	r1, r2
 80012cc:	602b      	str	r3, [r5, #0]
 80012ce:	f7ff f8ee 	bl	80004ae <_fstat>
 80012d2:	1c43      	adds	r3, r0, #1
 80012d4:	d102      	bne.n	80012dc <_fstat_r+0x1c>
 80012d6:	682b      	ldr	r3, [r5, #0]
 80012d8:	b103      	cbz	r3, 80012dc <_fstat_r+0x1c>
 80012da:	6023      	str	r3, [r4, #0]
 80012dc:	bd38      	pop	{r3, r4, r5, pc}
 80012de:	bf00      	nop
 80012e0:	200001c8 	.word	0x200001c8

080012e4 <_isatty_r>:
 80012e4:	b538      	push	{r3, r4, r5, lr}
 80012e6:	4d06      	ldr	r5, [pc, #24]	; (8001300 <_isatty_r+0x1c>)
 80012e8:	2300      	movs	r3, #0
 80012ea:	4604      	mov	r4, r0
 80012ec:	4608      	mov	r0, r1
 80012ee:	602b      	str	r3, [r5, #0]
 80012f0:	f7ff f8ed 	bl	80004ce <_isatty>
 80012f4:	1c43      	adds	r3, r0, #1
 80012f6:	d102      	bne.n	80012fe <_isatty_r+0x1a>
 80012f8:	682b      	ldr	r3, [r5, #0]
 80012fa:	b103      	cbz	r3, 80012fe <_isatty_r+0x1a>
 80012fc:	6023      	str	r3, [r4, #0]
 80012fe:	bd38      	pop	{r3, r4, r5, pc}
 8001300:	200001c8 	.word	0x200001c8

08001304 <_lseek_r>:
 8001304:	b538      	push	{r3, r4, r5, lr}
 8001306:	4d07      	ldr	r5, [pc, #28]	; (8001324 <_lseek_r+0x20>)
 8001308:	4604      	mov	r4, r0
 800130a:	4608      	mov	r0, r1
 800130c:	4611      	mov	r1, r2
 800130e:	2200      	movs	r2, #0
 8001310:	602a      	str	r2, [r5, #0]
 8001312:	461a      	mov	r2, r3
 8001314:	f7ff f8e6 	bl	80004e4 <_lseek>
 8001318:	1c43      	adds	r3, r0, #1
 800131a:	d102      	bne.n	8001322 <_lseek_r+0x1e>
 800131c:	682b      	ldr	r3, [r5, #0]
 800131e:	b103      	cbz	r3, 8001322 <_lseek_r+0x1e>
 8001320:	6023      	str	r3, [r4, #0]
 8001322:	bd38      	pop	{r3, r4, r5, pc}
 8001324:	200001c8 	.word	0x200001c8

08001328 <_read_r>:
 8001328:	b538      	push	{r3, r4, r5, lr}
 800132a:	4d07      	ldr	r5, [pc, #28]	; (8001348 <_read_r+0x20>)
 800132c:	4604      	mov	r4, r0
 800132e:	4608      	mov	r0, r1
 8001330:	4611      	mov	r1, r2
 8001332:	2200      	movs	r2, #0
 8001334:	602a      	str	r2, [r5, #0]
 8001336:	461a      	mov	r2, r3
 8001338:	f7ff f874 	bl	8000424 <_read>
 800133c:	1c43      	adds	r3, r0, #1
 800133e:	d102      	bne.n	8001346 <_read_r+0x1e>
 8001340:	682b      	ldr	r3, [r5, #0]
 8001342:	b103      	cbz	r3, 8001346 <_read_r+0x1e>
 8001344:	6023      	str	r3, [r4, #0]
 8001346:	bd38      	pop	{r3, r4, r5, pc}
 8001348:	200001c8 	.word	0x200001c8

0800134c <_sbrk_r>:
 800134c:	b538      	push	{r3, r4, r5, lr}
 800134e:	4d06      	ldr	r5, [pc, #24]	; (8001368 <_sbrk_r+0x1c>)
 8001350:	2300      	movs	r3, #0
 8001352:	4604      	mov	r4, r0
 8001354:	4608      	mov	r0, r1
 8001356:	602b      	str	r3, [r5, #0]
 8001358:	f7ff f8d2 	bl	8000500 <_sbrk>
 800135c:	1c43      	adds	r3, r0, #1
 800135e:	d102      	bne.n	8001366 <_sbrk_r+0x1a>
 8001360:	682b      	ldr	r3, [r5, #0]
 8001362:	b103      	cbz	r3, 8001366 <_sbrk_r+0x1a>
 8001364:	6023      	str	r3, [r4, #0]
 8001366:	bd38      	pop	{r3, r4, r5, pc}
 8001368:	200001c8 	.word	0x200001c8

0800136c <_write_r>:
 800136c:	b538      	push	{r3, r4, r5, lr}
 800136e:	4d07      	ldr	r5, [pc, #28]	; (800138c <_write_r+0x20>)
 8001370:	4604      	mov	r4, r0
 8001372:	4608      	mov	r0, r1
 8001374:	4611      	mov	r1, r2
 8001376:	2200      	movs	r2, #0
 8001378:	602a      	str	r2, [r5, #0]
 800137a:	461a      	mov	r2, r3
 800137c:	f7ff f86f 	bl	800045e <_write>
 8001380:	1c43      	adds	r3, r0, #1
 8001382:	d102      	bne.n	800138a <_write_r+0x1e>
 8001384:	682b      	ldr	r3, [r5, #0]
 8001386:	b103      	cbz	r3, 800138a <_write_r+0x1e>
 8001388:	6023      	str	r3, [r4, #0]
 800138a:	bd38      	pop	{r3, r4, r5, pc}
 800138c:	200001c8 	.word	0x200001c8

08001390 <_free_r>:
 8001390:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001392:	2900      	cmp	r1, #0
 8001394:	d044      	beq.n	8001420 <_free_r+0x90>
 8001396:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800139a:	9001      	str	r0, [sp, #4]
 800139c:	2b00      	cmp	r3, #0
 800139e:	f1a1 0404 	sub.w	r4, r1, #4
 80013a2:	bfb8      	it	lt
 80013a4:	18e4      	addlt	r4, r4, r3
 80013a6:	f7ff fe35 	bl	8001014 <__malloc_lock>
 80013aa:	4a1e      	ldr	r2, [pc, #120]	; (8001424 <_free_r+0x94>)
 80013ac:	9801      	ldr	r0, [sp, #4]
 80013ae:	6813      	ldr	r3, [r2, #0]
 80013b0:	b933      	cbnz	r3, 80013c0 <_free_r+0x30>
 80013b2:	6063      	str	r3, [r4, #4]
 80013b4:	6014      	str	r4, [r2, #0]
 80013b6:	b003      	add	sp, #12
 80013b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80013bc:	f7ff be30 	b.w	8001020 <__malloc_unlock>
 80013c0:	42a3      	cmp	r3, r4
 80013c2:	d908      	bls.n	80013d6 <_free_r+0x46>
 80013c4:	6825      	ldr	r5, [r4, #0]
 80013c6:	1961      	adds	r1, r4, r5
 80013c8:	428b      	cmp	r3, r1
 80013ca:	bf01      	itttt	eq
 80013cc:	6819      	ldreq	r1, [r3, #0]
 80013ce:	685b      	ldreq	r3, [r3, #4]
 80013d0:	1949      	addeq	r1, r1, r5
 80013d2:	6021      	streq	r1, [r4, #0]
 80013d4:	e7ed      	b.n	80013b2 <_free_r+0x22>
 80013d6:	461a      	mov	r2, r3
 80013d8:	685b      	ldr	r3, [r3, #4]
 80013da:	b10b      	cbz	r3, 80013e0 <_free_r+0x50>
 80013dc:	42a3      	cmp	r3, r4
 80013de:	d9fa      	bls.n	80013d6 <_free_r+0x46>
 80013e0:	6811      	ldr	r1, [r2, #0]
 80013e2:	1855      	adds	r5, r2, r1
 80013e4:	42a5      	cmp	r5, r4
 80013e6:	d10b      	bne.n	8001400 <_free_r+0x70>
 80013e8:	6824      	ldr	r4, [r4, #0]
 80013ea:	4421      	add	r1, r4
 80013ec:	1854      	adds	r4, r2, r1
 80013ee:	42a3      	cmp	r3, r4
 80013f0:	6011      	str	r1, [r2, #0]
 80013f2:	d1e0      	bne.n	80013b6 <_free_r+0x26>
 80013f4:	681c      	ldr	r4, [r3, #0]
 80013f6:	685b      	ldr	r3, [r3, #4]
 80013f8:	6053      	str	r3, [r2, #4]
 80013fa:	440c      	add	r4, r1
 80013fc:	6014      	str	r4, [r2, #0]
 80013fe:	e7da      	b.n	80013b6 <_free_r+0x26>
 8001400:	d902      	bls.n	8001408 <_free_r+0x78>
 8001402:	230c      	movs	r3, #12
 8001404:	6003      	str	r3, [r0, #0]
 8001406:	e7d6      	b.n	80013b6 <_free_r+0x26>
 8001408:	6825      	ldr	r5, [r4, #0]
 800140a:	1961      	adds	r1, r4, r5
 800140c:	428b      	cmp	r3, r1
 800140e:	bf04      	itt	eq
 8001410:	6819      	ldreq	r1, [r3, #0]
 8001412:	685b      	ldreq	r3, [r3, #4]
 8001414:	6063      	str	r3, [r4, #4]
 8001416:	bf04      	itt	eq
 8001418:	1949      	addeq	r1, r1, r5
 800141a:	6021      	streq	r1, [r4, #0]
 800141c:	6054      	str	r4, [r2, #4]
 800141e:	e7ca      	b.n	80013b6 <_free_r+0x26>
 8001420:	b003      	add	sp, #12
 8001422:	bd30      	pop	{r4, r5, pc}
 8001424:	200001c0 	.word	0x200001c0

08001428 <_init>:
 8001428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800142a:	bf00      	nop
 800142c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800142e:	bc08      	pop	{r3}
 8001430:	469e      	mov	lr, r3
 8001432:	4770      	bx	lr

08001434 <_fini>:
 8001434:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001436:	bf00      	nop
 8001438:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800143a:	bc08      	pop	{r3}
 800143c:	469e      	mov	lr, r3
 800143e:	4770      	bx	lr
